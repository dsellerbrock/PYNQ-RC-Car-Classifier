// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Matrix_Vector_Activa_4 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        in_V_V_dout,
        in_V_V_empty_n,
        in_V_V_read,
        out_V_V_din,
        out_V_V_full_n,
        out_V_V_write,
        tmp_loc_dout,
        tmp_loc_empty_n,
        tmp_loc_read,
        weights0_m_weights_V_address0,
        weights0_m_weights_V_ce0,
        weights0_m_weights_V_q0,
        weights0_m_weights_V_1_address0,
        weights0_m_weights_V_1_ce0,
        weights0_m_weights_V_1_q0,
        weights0_m_weights_V_2_address0,
        weights0_m_weights_V_2_ce0,
        weights0_m_weights_V_2_q0,
        weights0_m_weights_V_3_address0,
        weights0_m_weights_V_3_ce0,
        weights0_m_weights_V_3_q0,
        weights0_m_weights_V_4_address0,
        weights0_m_weights_V_4_ce0,
        weights0_m_weights_V_4_q0,
        weights0_m_weights_V_5_address0,
        weights0_m_weights_V_5_ce0,
        weights0_m_weights_V_5_q0,
        weights0_m_weights_V_6_address0,
        weights0_m_weights_V_6_ce0,
        weights0_m_weights_V_6_q0,
        weights0_m_weights_V_7_address0,
        weights0_m_weights_V_7_ce0,
        weights0_m_weights_V_7_q0,
        weights0_m_weights_V_8_address0,
        weights0_m_weights_V_8_ce0,
        weights0_m_weights_V_8_q0,
        weights0_m_weights_V_9_address0,
        weights0_m_weights_V_9_ce0,
        weights0_m_weights_V_9_q0,
        weights0_m_weights_V_10_address0,
        weights0_m_weights_V_10_ce0,
        weights0_m_weights_V_10_q0,
        weights0_m_weights_V_11_address0,
        weights0_m_weights_V_11_ce0,
        weights0_m_weights_V_11_q0,
        weights0_m_weights_V_12_address0,
        weights0_m_weights_V_12_ce0,
        weights0_m_weights_V_12_q0,
        weights0_m_weights_V_13_address0,
        weights0_m_weights_V_13_ce0,
        weights0_m_weights_V_13_q0,
        weights0_m_weights_V_14_address0,
        weights0_m_weights_V_14_ce0,
        weights0_m_weights_V_14_q0,
        weights0_m_weights_V_15_address0,
        weights0_m_weights_V_15_ce0,
        weights0_m_weights_V_15_q0,
        threshs0_m_threshold_15_address0,
        threshs0_m_threshold_15_ce0,
        threshs0_m_threshold_15_q0,
        threshs0_m_threshold_14_address0,
        threshs0_m_threshold_14_ce0,
        threshs0_m_threshold_14_q0,
        threshs0_m_threshold_7_address0,
        threshs0_m_threshold_7_ce0,
        threshs0_m_threshold_7_q0,
        threshs0_m_threshold_6_address0,
        threshs0_m_threshold_6_ce0,
        threshs0_m_threshold_6_q0,
        threshs0_m_threshold_5_address0,
        threshs0_m_threshold_5_ce0,
        threshs0_m_threshold_5_q0,
        threshs0_m_threshold_4_address0,
        threshs0_m_threshold_4_ce0,
        threshs0_m_threshold_4_q0,
        threshs0_m_threshold_3_address0,
        threshs0_m_threshold_3_ce0,
        threshs0_m_threshold_3_q0,
        threshs0_m_threshold_2_address0,
        threshs0_m_threshold_2_ce0,
        threshs0_m_threshold_2_q0,
        threshs0_m_threshold_1_address0,
        threshs0_m_threshold_1_ce0,
        threshs0_m_threshold_1_q0,
        threshs0_m_threshold_address0,
        threshs0_m_threshold_ce0,
        threshs0_m_threshold_q0,
        threshs0_m_threshold_13_address0,
        threshs0_m_threshold_13_ce0,
        threshs0_m_threshold_13_q0,
        threshs0_m_threshold_12_address0,
        threshs0_m_threshold_12_ce0,
        threshs0_m_threshold_12_q0,
        threshs0_m_threshold_11_address0,
        threshs0_m_threshold_11_ce0,
        threshs0_m_threshold_11_q0,
        threshs0_m_threshold_10_address0,
        threshs0_m_threshold_10_ce0,
        threshs0_m_threshold_10_q0,
        threshs0_m_threshold_9_address0,
        threshs0_m_threshold_9_ce0,
        threshs0_m_threshold_9_q0,
        threshs0_m_threshold_8_address0,
        threshs0_m_threshold_8_ce0,
        threshs0_m_threshold_8_q0
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state10 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [23:0] in_V_V_dout;
input   in_V_V_empty_n;
output   in_V_V_read;
output  [15:0] out_V_V_din;
input   out_V_V_full_n;
output   out_V_V_write;
input  [31:0] tmp_loc_dout;
input   tmp_loc_empty_n;
output   tmp_loc_read;
output  [5:0] weights0_m_weights_V_address0;
output   weights0_m_weights_V_ce0;
input  [2:0] weights0_m_weights_V_q0;
output  [5:0] weights0_m_weights_V_1_address0;
output   weights0_m_weights_V_1_ce0;
input  [2:0] weights0_m_weights_V_1_q0;
output  [5:0] weights0_m_weights_V_2_address0;
output   weights0_m_weights_V_2_ce0;
input  [2:0] weights0_m_weights_V_2_q0;
output  [5:0] weights0_m_weights_V_3_address0;
output   weights0_m_weights_V_3_ce0;
input  [2:0] weights0_m_weights_V_3_q0;
output  [5:0] weights0_m_weights_V_4_address0;
output   weights0_m_weights_V_4_ce0;
input  [2:0] weights0_m_weights_V_4_q0;
output  [5:0] weights0_m_weights_V_5_address0;
output   weights0_m_weights_V_5_ce0;
input  [2:0] weights0_m_weights_V_5_q0;
output  [5:0] weights0_m_weights_V_6_address0;
output   weights0_m_weights_V_6_ce0;
input  [2:0] weights0_m_weights_V_6_q0;
output  [5:0] weights0_m_weights_V_7_address0;
output   weights0_m_weights_V_7_ce0;
input  [2:0] weights0_m_weights_V_7_q0;
output  [5:0] weights0_m_weights_V_8_address0;
output   weights0_m_weights_V_8_ce0;
input  [2:0] weights0_m_weights_V_8_q0;
output  [5:0] weights0_m_weights_V_9_address0;
output   weights0_m_weights_V_9_ce0;
input  [2:0] weights0_m_weights_V_9_q0;
output  [5:0] weights0_m_weights_V_10_address0;
output   weights0_m_weights_V_10_ce0;
input  [2:0] weights0_m_weights_V_10_q0;
output  [5:0] weights0_m_weights_V_11_address0;
output   weights0_m_weights_V_11_ce0;
input  [2:0] weights0_m_weights_V_11_q0;
output  [5:0] weights0_m_weights_V_12_address0;
output   weights0_m_weights_V_12_ce0;
input  [2:0] weights0_m_weights_V_12_q0;
output  [5:0] weights0_m_weights_V_13_address0;
output   weights0_m_weights_V_13_ce0;
input  [2:0] weights0_m_weights_V_13_q0;
output  [5:0] weights0_m_weights_V_14_address0;
output   weights0_m_weights_V_14_ce0;
input  [2:0] weights0_m_weights_V_14_q0;
output  [5:0] weights0_m_weights_V_15_address0;
output   weights0_m_weights_V_15_ce0;
input  [2:0] weights0_m_weights_V_15_q0;
output  [1:0] threshs0_m_threshold_15_address0;
output   threshs0_m_threshold_15_ce0;
input  [23:0] threshs0_m_threshold_15_q0;
output  [1:0] threshs0_m_threshold_14_address0;
output   threshs0_m_threshold_14_ce0;
input  [23:0] threshs0_m_threshold_14_q0;
output  [1:0] threshs0_m_threshold_7_address0;
output   threshs0_m_threshold_7_ce0;
input  [23:0] threshs0_m_threshold_7_q0;
output  [1:0] threshs0_m_threshold_6_address0;
output   threshs0_m_threshold_6_ce0;
input  [23:0] threshs0_m_threshold_6_q0;
output  [1:0] threshs0_m_threshold_5_address0;
output   threshs0_m_threshold_5_ce0;
input  [23:0] threshs0_m_threshold_5_q0;
output  [1:0] threshs0_m_threshold_4_address0;
output   threshs0_m_threshold_4_ce0;
input  [23:0] threshs0_m_threshold_4_q0;
output  [1:0] threshs0_m_threshold_3_address0;
output   threshs0_m_threshold_3_ce0;
input  [23:0] threshs0_m_threshold_3_q0;
output  [1:0] threshs0_m_threshold_2_address0;
output   threshs0_m_threshold_2_ce0;
input  [23:0] threshs0_m_threshold_2_q0;
output  [1:0] threshs0_m_threshold_1_address0;
output   threshs0_m_threshold_1_ce0;
input  [23:0] threshs0_m_threshold_1_q0;
output  [1:0] threshs0_m_threshold_address0;
output   threshs0_m_threshold_ce0;
input  [23:0] threshs0_m_threshold_q0;
output  [1:0] threshs0_m_threshold_13_address0;
output   threshs0_m_threshold_13_ce0;
input  [23:0] threshs0_m_threshold_13_q0;
output  [1:0] threshs0_m_threshold_12_address0;
output   threshs0_m_threshold_12_ce0;
input  [23:0] threshs0_m_threshold_12_q0;
output  [1:0] threshs0_m_threshold_11_address0;
output   threshs0_m_threshold_11_ce0;
input  [23:0] threshs0_m_threshold_11_q0;
output  [1:0] threshs0_m_threshold_10_address0;
output   threshs0_m_threshold_10_ce0;
input  [23:0] threshs0_m_threshold_10_q0;
output  [1:0] threshs0_m_threshold_9_address0;
output   threshs0_m_threshold_9_ce0;
input  [23:0] threshs0_m_threshold_9_q0;
output  [1:0] threshs0_m_threshold_8_address0;
output   threshs0_m_threshold_8_ce0;
input  [23:0] threshs0_m_threshold_8_q0;

reg ap_done;
reg ap_idle;
reg start_write;
reg in_V_V_read;
reg out_V_V_write;
reg tmp_loc_read;
reg weights0_m_weights_V_ce0;
reg weights0_m_weights_V_1_ce0;
reg weights0_m_weights_V_2_ce0;
reg weights0_m_weights_V_3_ce0;
reg weights0_m_weights_V_4_ce0;
reg weights0_m_weights_V_5_ce0;
reg weights0_m_weights_V_6_ce0;
reg weights0_m_weights_V_7_ce0;
reg weights0_m_weights_V_8_ce0;
reg weights0_m_weights_V_9_ce0;
reg weights0_m_weights_V_10_ce0;
reg weights0_m_weights_V_11_ce0;
reg weights0_m_weights_V_12_ce0;
reg weights0_m_weights_V_13_ce0;
reg weights0_m_weights_V_14_ce0;
reg weights0_m_weights_V_15_ce0;
reg threshs0_m_threshold_15_ce0;
reg threshs0_m_threshold_14_ce0;
reg threshs0_m_threshold_7_ce0;
reg threshs0_m_threshold_6_ce0;
reg threshs0_m_threshold_5_ce0;
reg threshs0_m_threshold_4_ce0;
reg threshs0_m_threshold_3_ce0;
reg threshs0_m_threshold_2_ce0;
reg threshs0_m_threshold_1_ce0;
reg threshs0_m_threshold_ce0;
reg threshs0_m_threshold_13_ce0;
reg threshs0_m_threshold_12_ce0;
reg threshs0_m_threshold_11_ce0;
reg threshs0_m_threshold_10_ce0;
reg threshs0_m_threshold_9_ce0;
reg threshs0_m_threshold_8_ce0;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    in_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_i_i_reg_3293;
reg   [0:0] tmp_i_i_1069_reg_3302;
reg    out_V_V_blk_n;
reg    ap_enable_reg_pp0_iter6;
reg   [0:0] tmp_32_i_i_reg_3354;
reg   [0:0] tmp_32_i_i_reg_3354_pp0_iter5_reg;
reg    tmp_loc_blk_n;
reg   [31:0] i_i_i_reg_699;
reg   [31:0] tmp_loc_read_reg_3282;
reg    ap_block_state1;
wire   [31:0] tmp_i_i_fu_744_p2;
reg   [31:0] tmp_i_i_reg_3288;
wire    ap_CS_fsm_state2;
wire   [0:0] exitcond_i_i_fu_750_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_predicate_op88_read_state4;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
reg    ap_block_state9_pp0_stage0_iter6;
reg    ap_block_pp0_stage0_11001;
wire   [31:0] i_fu_755_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] tmp_i_i_1069_fu_764_p2;
wire   [3:0] tmp_1267_fu_773_p1;
reg   [3:0] tmp_1267_reg_3306;
wire   [3:0] tmp_1266_fu_777_p1;
reg   [3:0] tmp_1266_reg_3311;
wire   [0:0] sel_tmp6_fu_781_p2;
reg   [0:0] sel_tmp6_reg_3321;
wire   [0:0] sel_tmp7_fu_787_p2;
reg   [0:0] sel_tmp7_reg_3327;
wire   [0:0] tmp_31_i_i_fu_796_p2;
reg   [0:0] tmp_31_i_i_reg_3334;
reg   [0:0] tmp_31_i_i_reg_3334_pp0_iter1_reg;
reg   [0:0] tmp_31_i_i_reg_3334_pp0_iter2_reg;
reg   [0:0] tmp_31_i_i_reg_3334_pp0_iter3_reg;
wire   [0:0] tmp_32_i_i_fu_808_p2;
reg   [0:0] tmp_32_i_i_reg_3354_pp0_iter1_reg;
reg   [0:0] tmp_32_i_i_reg_3354_pp0_iter2_reg;
reg   [0:0] tmp_32_i_i_reg_3354_pp0_iter3_reg;
reg   [0:0] tmp_32_i_i_reg_3354_pp0_iter4_reg;
reg   [31:0] nf_assign_load_reg_3358;
reg   [31:0] nf_assign_load_reg_3358_pp0_iter1_reg;
reg   [31:0] nf_assign_load_reg_3358_pp0_iter2_reg;
wire   [0:0] tmp_33_i_i_fu_828_p2;
reg   [0:0] tmp_33_i_i_reg_3363;
wire   [23:0] inElem_V_fu_874_p11;
wire   [0:0] tmp_1268_fu_1223_p1;
reg   [0:0] tmp_1268_reg_3458;
wire   [7:0] tmp_1269_fu_1227_p1;
reg   [7:0] tmp_1269_reg_3463;
reg   [0:0] tmp_1270_reg_3468;
wire  signed [8:0] tmp_112_0_1_i_i_fu_1249_p1;
reg  signed [8:0] tmp_112_0_1_i_i_reg_3473;
wire   [8:0] ret_V_2_0_1_i_i_fu_1253_p2;
reg   [8:0] ret_V_2_0_1_i_i_reg_3493;
reg   [0:0] tmp_1271_reg_3513;
wire  signed [8:0] tmp_112_0_2_i_i_fu_1277_p1;
reg  signed [8:0] tmp_112_0_2_i_i_reg_3518;
wire   [8:0] ret_V_2_0_2_i_i_fu_1281_p2;
reg   [8:0] ret_V_2_0_2_i_i_reg_3538;
wire   [0:0] tmp_1272_fu_1287_p1;
reg   [0:0] tmp_1272_reg_3558;
reg   [0:0] tmp_1273_reg_3563;
reg   [0:0] tmp_1274_reg_3568;
wire   [0:0] tmp_1275_fu_1307_p1;
reg   [0:0] tmp_1275_reg_3573;
reg   [0:0] tmp_1276_reg_3578;
reg   [0:0] tmp_1277_reg_3583;
wire   [0:0] tmp_1278_fu_1327_p1;
reg   [0:0] tmp_1278_reg_3588;
reg   [0:0] tmp_1279_reg_3593;
reg   [0:0] tmp_1280_reg_3598;
wire   [0:0] tmp_1281_fu_1347_p1;
reg   [0:0] tmp_1281_reg_3603;
reg   [0:0] tmp_1282_reg_3608;
reg   [0:0] tmp_1283_reg_3613;
wire   [0:0] tmp_1284_fu_1367_p1;
reg   [0:0] tmp_1284_reg_3618;
reg   [0:0] tmp_1285_reg_3623;
reg   [0:0] tmp_1286_reg_3628;
wire   [0:0] tmp_1287_fu_1387_p1;
reg   [0:0] tmp_1287_reg_3633;
reg   [0:0] tmp_1288_reg_3638;
reg   [0:0] tmp_1289_reg_3643;
wire   [0:0] tmp_1290_fu_1407_p1;
reg   [0:0] tmp_1290_reg_3648;
reg   [0:0] tmp_1291_reg_3653;
reg   [0:0] tmp_1292_reg_3658;
wire   [0:0] tmp_1293_fu_1427_p1;
reg   [0:0] tmp_1293_reg_3663;
reg   [0:0] tmp_1294_reg_3668;
reg   [0:0] tmp_1295_reg_3673;
wire   [0:0] tmp_1296_fu_1447_p1;
reg   [0:0] tmp_1296_reg_3678;
reg   [0:0] tmp_1297_reg_3683;
reg   [0:0] tmp_1298_reg_3688;
wire   [0:0] tmp_1299_fu_1467_p1;
reg   [0:0] tmp_1299_reg_3693;
reg   [0:0] tmp_1300_reg_3698;
reg   [0:0] tmp_1301_reg_3703;
wire   [0:0] tmp_1302_fu_1487_p1;
reg   [0:0] tmp_1302_reg_3708;
reg   [0:0] tmp_1303_reg_3713;
reg   [0:0] tmp_1304_reg_3718;
wire   [0:0] tmp_1305_fu_1507_p1;
reg   [0:0] tmp_1305_reg_3723;
reg   [0:0] tmp_1306_reg_3728;
reg   [0:0] tmp_1307_reg_3733;
wire   [0:0] tmp_1308_fu_1527_p1;
reg   [0:0] tmp_1308_reg_3738;
reg   [0:0] tmp_1309_reg_3743;
reg   [0:0] tmp_1310_reg_3748;
wire   [0:0] tmp_1311_fu_1547_p1;
reg   [0:0] tmp_1311_reg_3753;
reg   [0:0] tmp_1312_reg_3758;
reg   [0:0] tmp_1313_reg_3763;
wire   [0:0] tmp_1314_fu_1567_p1;
reg   [0:0] tmp_1314_reg_3768;
reg   [0:0] tmp_1315_reg_3773;
reg   [0:0] tmp_1316_reg_3778;
wire   [8:0] p_Val2_7_0_i_i_fu_1596_p3;
reg   [8:0] p_Val2_7_0_i_i_reg_3783;
wire   [10:0] tmp154_fu_1637_p2;
reg   [10:0] tmp154_reg_3788;
wire   [8:0] p_Val2_7_1_i_i_fu_1643_p3;
reg   [8:0] p_Val2_7_1_i_i_reg_3793;
wire   [10:0] tmp157_fu_1684_p2;
reg   [10:0] tmp157_reg_3798;
wire   [8:0] p_Val2_7_2_i_i_fu_1690_p3;
reg   [8:0] p_Val2_7_2_i_i_reg_3803;
wire   [10:0] tmp160_fu_1731_p2;
reg   [10:0] tmp160_reg_3808;
wire   [8:0] p_Val2_7_3_i_i_fu_1737_p3;
reg   [8:0] p_Val2_7_3_i_i_reg_3813;
wire   [10:0] tmp163_fu_1778_p2;
reg   [10:0] tmp163_reg_3818;
wire   [8:0] p_Val2_7_4_i_i_fu_1784_p3;
reg   [8:0] p_Val2_7_4_i_i_reg_3823;
wire   [10:0] tmp166_fu_1825_p2;
reg   [10:0] tmp166_reg_3828;
wire   [8:0] p_Val2_7_5_i_i_fu_1831_p3;
reg   [8:0] p_Val2_7_5_i_i_reg_3833;
wire   [10:0] tmp169_fu_1872_p2;
reg   [10:0] tmp169_reg_3838;
wire   [8:0] p_Val2_7_6_i_i_fu_1878_p3;
reg   [8:0] p_Val2_7_6_i_i_reg_3843;
wire   [10:0] tmp172_fu_1919_p2;
reg   [10:0] tmp172_reg_3848;
wire   [8:0] p_Val2_7_7_i_i_fu_1925_p3;
reg   [8:0] p_Val2_7_7_i_i_reg_3853;
wire   [10:0] tmp175_fu_1966_p2;
reg   [10:0] tmp175_reg_3858;
wire   [8:0] p_Val2_7_8_i_i_fu_1972_p3;
reg   [8:0] p_Val2_7_8_i_i_reg_3863;
wire   [10:0] tmp178_fu_2013_p2;
reg   [10:0] tmp178_reg_3868;
wire   [8:0] p_Val2_7_9_i_i_fu_2019_p3;
reg   [8:0] p_Val2_7_9_i_i_reg_3873;
wire   [10:0] tmp181_fu_2060_p2;
reg   [10:0] tmp181_reg_3878;
wire   [8:0] p_Val2_7_10_i_i_fu_2066_p3;
reg   [8:0] p_Val2_7_10_i_i_reg_3883;
wire   [10:0] tmp184_fu_2107_p2;
reg   [10:0] tmp184_reg_3888;
wire   [8:0] p_Val2_7_11_i_i_fu_2113_p3;
reg   [8:0] p_Val2_7_11_i_i_reg_3893;
wire   [10:0] tmp187_fu_2154_p2;
reg   [10:0] tmp187_reg_3898;
wire   [8:0] p_Val2_7_12_i_i_fu_2160_p3;
reg   [8:0] p_Val2_7_12_i_i_reg_3903;
wire   [10:0] tmp190_fu_2201_p2;
reg   [10:0] tmp190_reg_3908;
wire   [8:0] p_Val2_7_13_i_i_fu_2207_p3;
reg   [8:0] p_Val2_7_13_i_i_reg_3913;
wire   [10:0] tmp193_fu_2248_p2;
reg   [10:0] tmp193_reg_3918;
wire   [8:0] p_Val2_7_14_i_i_fu_2254_p3;
reg   [8:0] p_Val2_7_14_i_i_reg_3923;
wire   [10:0] tmp196_fu_2295_p2;
reg   [10:0] tmp196_reg_3928;
wire   [8:0] p_Val2_7_15_i_i_fu_2301_p3;
reg   [8:0] p_Val2_7_15_i_i_reg_3933;
wire   [10:0] tmp199_fu_2342_p2;
reg   [10:0] tmp199_reg_3938;
wire   [23:0] accu_0_0_V_fu_2547_p2;
reg   [23:0] accu_0_0_V_reg_4023;
wire   [23:0] accu_0_1_V_fu_2573_p2;
reg   [23:0] accu_0_1_V_reg_4028;
wire   [23:0] accu_0_2_V_fu_2599_p2;
reg   [23:0] accu_0_2_V_reg_4033;
wire   [23:0] accu_0_3_V_fu_2625_p2;
reg   [23:0] accu_0_3_V_reg_4038;
wire   [23:0] accu_0_4_V_fu_2651_p2;
reg   [23:0] accu_0_4_V_reg_4043;
wire   [23:0] accu_0_5_V_fu_2677_p2;
reg   [23:0] accu_0_5_V_reg_4048;
wire   [23:0] accu_0_6_V_fu_2703_p2;
reg   [23:0] accu_0_6_V_reg_4053;
wire   [23:0] accu_0_7_V_fu_2729_p2;
reg   [23:0] accu_0_7_V_reg_4058;
wire   [23:0] accu_0_8_V_fu_2755_p2;
reg   [23:0] accu_0_8_V_reg_4063;
wire   [23:0] accu_0_9_V_fu_2781_p2;
reg   [23:0] accu_0_9_V_reg_4068;
wire   [23:0] accu_0_10_V_fu_2807_p2;
reg   [23:0] accu_0_10_V_reg_4073;
wire   [23:0] accu_0_11_V_fu_2833_p2;
reg   [23:0] accu_0_11_V_reg_4078;
wire   [23:0] accu_0_12_V_fu_2859_p2;
reg   [23:0] accu_0_12_V_reg_4083;
wire   [23:0] accu_0_13_V_fu_2885_p2;
reg   [23:0] accu_0_13_V_reg_4088;
wire   [23:0] accu_0_14_V_fu_2911_p2;
reg   [23:0] accu_0_14_V_reg_4093;
wire   [23:0] accu_0_15_V_fu_2937_p2;
reg   [23:0] accu_0_15_V_reg_4098;
reg   [23:0] threshs0_m_threshold_17_reg_4103;
reg   [23:0] threshs0_m_threshold_19_reg_4108;
reg   [23:0] threshs0_m_threshold_21_reg_4113;
reg   [23:0] threshs0_m_threshold_23_reg_4118;
reg   [23:0] threshs0_m_threshold_25_reg_4123;
reg   [23:0] threshs0_m_threshold_27_reg_4128;
reg   [23:0] threshs0_m_threshold_29_reg_4133;
reg   [23:0] threshs0_m_threshold_31_reg_4138;
reg   [23:0] threshs0_m_threshold_33_reg_4143;
reg   [23:0] threshs0_m_threshold_35_reg_4148;
reg   [23:0] threshs0_m_threshold_37_reg_4153;
reg   [23:0] threshs0_m_threshold_39_reg_4158;
reg   [23:0] threshs0_m_threshold_41_reg_4163;
reg   [23:0] threshs0_m_threshold_43_reg_4168;
reg   [23:0] threshs0_m_threshold_45_reg_4173;
reg   [23:0] threshs0_m_threshold_47_reg_4178;
wire   [0:0] tmp_i_i_i_fu_3023_p2;
reg   [0:0] tmp_i_i_i_reg_4183;
wire   [0:0] tmp_i1215_i_i_fu_3027_p2;
reg   [0:0] tmp_i1215_i_i_reg_4188;
wire   [0:0] tmp_i1216_i_i_fu_3031_p2;
reg   [0:0] tmp_i1216_i_i_reg_4193;
wire   [0:0] tmp_i1217_i_i_fu_3035_p2;
reg   [0:0] tmp_i1217_i_i_reg_4198;
wire   [0:0] tmp_i1218_i_i_fu_3039_p2;
reg   [0:0] tmp_i1218_i_i_reg_4203;
wire   [0:0] tmp_i1219_i_i_fu_3043_p2;
reg   [0:0] tmp_i1219_i_i_reg_4208;
wire   [0:0] tmp_i1220_i_i_fu_3047_p2;
reg   [0:0] tmp_i1220_i_i_reg_4213;
wire   [0:0] tmp_i1221_i_i_fu_3051_p2;
reg   [0:0] tmp_i1221_i_i_reg_4218;
wire   [0:0] tmp_i1222_i_i_fu_3055_p2;
reg   [0:0] tmp_i1222_i_i_reg_4223;
wire   [0:0] tmp_i1223_i_i_fu_3059_p2;
reg   [0:0] tmp_i1223_i_i_reg_4228;
wire   [0:0] tmp_i1224_i_i_fu_3063_p2;
reg   [0:0] tmp_i1224_i_i_reg_4233;
wire   [0:0] tmp_i1225_i_i_fu_3067_p2;
reg   [0:0] tmp_i1225_i_i_reg_4238;
wire   [0:0] tmp_i1226_i_i_fu_3071_p2;
reg   [0:0] tmp_i1226_i_i_reg_4243;
wire   [0:0] tmp_i1227_i_i_fu_3075_p2;
reg   [0:0] tmp_i1227_i_i_reg_4248;
wire   [0:0] tmp_i1228_i_i_fu_3079_p2;
reg   [0:0] tmp_i1228_i_i_reg_4253;
wire   [0:0] tmp_i1229_i_i_fu_3083_p2;
reg   [0:0] tmp_i1229_i_i_reg_4258;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
wire   [23:0] ap_phi_reg_pp0_iter0_act_m_val_V_reg_710;
reg   [23:0] ap_phi_reg_pp0_iter1_act_m_val_V_reg_710;
reg   [23:0] ap_phi_reg_pp0_iter2_act_m_val_V_reg_710;
wire   [63:0] tmp_103_i_i_fu_1180_p1;
wire   [63:0] tmp_110_i_i_fu_2348_p1;
reg    ap_block_pp0_stage0_01001;
reg   [23:0] accu_V_0_0_i_i_fu_152;
reg   [23:0] accu_V_0_1_i_i_fu_156;
reg   [23:0] accu_V_0_2_i_i_fu_160;
reg   [23:0] accu_V_0_3_i_i_fu_164;
reg   [23:0] accu_V_0_4_i_i_fu_168;
reg   [23:0] accu_V_0_5_i_i_fu_172;
reg   [23:0] accu_V_0_6_i_i_fu_176;
reg   [23:0] accu_V_0_7_i_i_fu_180;
reg   [23:0] accu_V_0_8_i_i_fu_184;
reg   [23:0] accu_V_0_9_i_i_fu_188;
reg   [23:0] accu_V_0_10_i_i_fu_192;
reg   [23:0] accu_V_0_11_i_i_fu_196;
reg   [23:0] accu_V_0_12_i_i_fu_200;
reg   [23:0] accu_V_0_13_i_i_fu_204;
reg   [23:0] accu_V_0_14_i_i_fu_208;
reg   [23:0] accu_V_0_15_i_i_fu_212;
reg   [31:0] tile_assign_fu_216;
wire   [31:0] tile_fu_1200_p2;
wire   [31:0] p_4_i_i_fu_1211_p3;
reg   [31:0] sf_5_fu_220;
wire   [31:0] sf_fu_802_p2;
reg   [31:0] nf_assign_fu_224;
wire   [31:0] p_i_i_fu_834_p3;
reg   [23:0] inputBuf_8_V_2_fu_228;
wire   [23:0] inputBuf_8_V_24_fu_1125_p3;
reg   [23:0] inputBuf_8_V_13_fu_232;
wire   [23:0] inputBuf_8_V_23_fu_1118_p3;
reg   [23:0] inputBuf_8_V_11_fu_236;
wire   [23:0] inputBuf_8_V_21_fu_1103_p3;
reg   [23:0] inputBuf_8_V_9_fu_240;
wire   [23:0] inputBuf_8_V_20_fu_1087_p3;
reg   [23:0] inputBuf_8_V_7_fu_244;
wire   [23:0] inputBuf_8_V_8_fu_1063_p3;
reg   [23:0] inputBuf_8_V_5_fu_248;
wire   [23:0] inputBuf_8_V_6_fu_1047_p3;
reg   [23:0] inputBuf_8_V_3_fu_252;
wire   [23:0] inputBuf_8_V_4_fu_1023_p3;
reg   [23:0] inputBuf_8_V_16_fu_256;
wire   [23:0] inputBuf_8_V_1_fu_999_p3;
reg   [23:0] inputBuf_8_V_18_fu_260;
wire   [23:0] inputBuf_8_V_fu_967_p3;
wire   [31:0] tmp_fu_734_p2;
wire   [31:0] tmp_1265_fu_739_p2;
wire   [31:0] nf_fu_822_p2;
wire   [0:0] sel_tmp5_fu_922_p2;
wire   [0:0] sel_tmp4_fu_917_p2;
wire   [0:0] sel_tmp3_fu_912_p2;
wire   [0:0] sel_tmp2_fu_907_p2;
wire   [0:0] sel_tmp1_fu_902_p2;
wire   [0:0] sel_tmp_fu_897_p2;
wire   [0:0] or_cond_fu_927_p2;
wire   [0:0] or_cond1_fu_931_p2;
wire   [0:0] or_cond2_fu_937_p2;
wire   [0:0] or_cond3_fu_943_p2;
wire   [0:0] or_cond4_fu_949_p2;
wire   [0:0] or_cond5_fu_955_p2;
wire   [0:0] or_cond6_fu_961_p2;
wire   [23:0] newSel_fu_975_p3;
wire   [23:0] newSel1_fu_983_p3;
wire   [23:0] newSel2_fu_991_p3;
wire   [23:0] newSel4_fu_1007_p3;
wire   [23:0] newSel5_fu_1015_p3;
wire   [23:0] newSel7_fu_1031_p3;
wire   [23:0] newSel8_fu_1039_p3;
wire   [23:0] newSel3_fu_1055_p3;
wire   [23:0] newSel6_fu_1071_p3;
wire   [23:0] newSel9_fu_1079_p3;
wire   [23:0] newSel10_fu_1095_p3;
wire   [23:0] inputBuf_8_V_22_fu_1111_p3;
wire   [7:0] arg_V_read_assign_1_fu_1239_p4;
wire   [7:0] arg_V_read_assign_2_fu_1267_p4;
wire  signed [8:0] tmp_112_0_i_i_fu_1587_p1;
wire   [8:0] ret_V_2_0_i_i_fu_1590_p2;
wire   [8:0] p_Val2_7_0_1_i_i_fu_1603_p3;
wire   [9:0] tmp_116_0_1_i_i_fu_1608_p3;
wire   [8:0] p_Val2_7_0_2_i_i_fu_1620_p3;
wire   [9:0] tmp_116_0_2_i_i_fu_1625_p3;
wire  signed [10:0] tmp_116_0_1_cast_i_i_fu_1616_p1;
wire  signed [10:0] tmp_116_0_2_cast_i_i_fu_1633_p1;
wire   [8:0] p_Val2_7_1_1_i_i_fu_1650_p3;
wire   [9:0] tmp_116_1_1_i_i_fu_1655_p3;
wire   [8:0] p_Val2_7_1_2_i_i_fu_1667_p3;
wire   [9:0] tmp_116_1_2_i_i_fu_1672_p3;
wire  signed [10:0] tmp_116_1_1_cast_i_i_fu_1663_p1;
wire  signed [10:0] tmp_116_1_2_cast_i_i_fu_1680_p1;
wire   [8:0] p_Val2_7_2_1_i_i_fu_1697_p3;
wire   [9:0] tmp_116_2_1_i_i_fu_1702_p3;
wire   [8:0] p_Val2_7_2_2_i_i_fu_1714_p3;
wire   [9:0] tmp_116_2_2_i_i_fu_1719_p3;
wire  signed [10:0] tmp_116_2_1_cast_i_i_fu_1710_p1;
wire  signed [10:0] tmp_116_2_2_cast_i_i_fu_1727_p1;
wire   [8:0] p_Val2_7_3_1_i_i_fu_1744_p3;
wire   [9:0] tmp_116_3_1_i_i_fu_1749_p3;
wire   [8:0] p_Val2_7_3_2_i_i_fu_1761_p3;
wire   [9:0] tmp_116_3_2_i_i_fu_1766_p3;
wire  signed [10:0] tmp_116_3_1_cast_i_i_fu_1757_p1;
wire  signed [10:0] tmp_116_3_2_cast_i_i_fu_1774_p1;
wire   [8:0] p_Val2_7_4_1_i_i_fu_1791_p3;
wire   [9:0] tmp_116_4_1_i_i_fu_1796_p3;
wire   [8:0] p_Val2_7_4_2_i_i_fu_1808_p3;
wire   [9:0] tmp_116_4_2_i_i_fu_1813_p3;
wire  signed [10:0] tmp_116_4_1_cast_i_i_fu_1804_p1;
wire  signed [10:0] tmp_116_4_2_cast_i_i_fu_1821_p1;
wire   [8:0] p_Val2_7_5_1_i_i_fu_1838_p3;
wire   [9:0] tmp_116_5_1_i_i_fu_1843_p3;
wire   [8:0] p_Val2_7_5_2_i_i_fu_1855_p3;
wire   [9:0] tmp_116_5_2_i_i_fu_1860_p3;
wire  signed [10:0] tmp_116_5_1_cast_i_i_fu_1851_p1;
wire  signed [10:0] tmp_116_5_2_cast_i_i_fu_1868_p1;
wire   [8:0] p_Val2_7_6_1_i_i_fu_1885_p3;
wire   [9:0] tmp_116_6_1_i_i_fu_1890_p3;
wire   [8:0] p_Val2_7_6_2_i_i_fu_1902_p3;
wire   [9:0] tmp_116_6_2_i_i_fu_1907_p3;
wire  signed [10:0] tmp_116_6_1_cast_i_i_fu_1898_p1;
wire  signed [10:0] tmp_116_6_2_cast_i_i_fu_1915_p1;
wire   [8:0] p_Val2_7_7_1_i_i_fu_1932_p3;
wire   [9:0] tmp_116_7_1_i_i_fu_1937_p3;
wire   [8:0] p_Val2_7_7_2_i_i_fu_1949_p3;
wire   [9:0] tmp_116_7_2_i_i_fu_1954_p3;
wire  signed [10:0] tmp_116_7_1_cast_i_i_fu_1945_p1;
wire  signed [10:0] tmp_116_7_2_cast_i_i_fu_1962_p1;
wire   [8:0] p_Val2_7_8_1_i_i_fu_1979_p3;
wire   [9:0] tmp_116_8_1_i_i_fu_1984_p3;
wire   [8:0] p_Val2_7_8_2_i_i_fu_1996_p3;
wire   [9:0] tmp_116_8_2_i_i_fu_2001_p3;
wire  signed [10:0] tmp_116_8_1_cast_i_i_fu_1992_p1;
wire  signed [10:0] tmp_116_8_2_cast_i_i_fu_2009_p1;
wire   [8:0] p_Val2_7_9_1_i_i_fu_2026_p3;
wire   [9:0] tmp_116_9_1_i_i_fu_2031_p3;
wire   [8:0] p_Val2_7_9_2_i_i_fu_2043_p3;
wire   [9:0] tmp_116_9_2_i_i_fu_2048_p3;
wire  signed [10:0] tmp_116_9_1_cast_i_i_fu_2039_p1;
wire  signed [10:0] tmp_116_9_2_cast_i_i_fu_2056_p1;
wire   [8:0] p_Val2_7_10_1_i_i_fu_2073_p3;
wire   [9:0] tmp_116_10_1_i_i_fu_2078_p3;
wire   [8:0] p_Val2_7_10_2_i_i_fu_2090_p3;
wire   [9:0] tmp_116_10_2_i_i_fu_2095_p3;
wire  signed [10:0] tmp_116_10_1_cast_i_s_fu_2086_p1;
wire  signed [10:0] tmp_116_10_2_cast_i_s_fu_2103_p1;
wire   [8:0] p_Val2_7_11_1_i_i_fu_2120_p3;
wire   [9:0] tmp_116_11_1_i_i_fu_2125_p3;
wire   [8:0] p_Val2_7_11_2_i_i_fu_2137_p3;
wire   [9:0] tmp_116_11_2_i_i_fu_2142_p3;
wire  signed [10:0] tmp_116_11_1_cast_i_s_fu_2133_p1;
wire  signed [10:0] tmp_116_11_2_cast_i_s_fu_2150_p1;
wire   [8:0] p_Val2_7_12_1_i_i_fu_2167_p3;
wire   [9:0] tmp_116_12_1_i_i_fu_2172_p3;
wire   [8:0] p_Val2_7_12_2_i_i_fu_2184_p3;
wire   [9:0] tmp_116_12_2_i_i_fu_2189_p3;
wire  signed [10:0] tmp_116_12_1_cast_i_s_fu_2180_p1;
wire  signed [10:0] tmp_116_12_2_cast_i_s_fu_2197_p1;
wire   [8:0] p_Val2_7_13_1_i_i_fu_2214_p3;
wire   [9:0] tmp_116_13_1_i_i_fu_2219_p3;
wire   [8:0] p_Val2_7_13_2_i_i_fu_2231_p3;
wire   [9:0] tmp_116_13_2_i_i_fu_2236_p3;
wire  signed [10:0] tmp_116_13_1_cast_i_s_fu_2227_p1;
wire  signed [10:0] tmp_116_13_2_cast_i_s_fu_2244_p1;
wire   [8:0] p_Val2_7_14_1_i_i_fu_2261_p3;
wire   [9:0] tmp_116_14_1_i_i_fu_2266_p3;
wire   [8:0] p_Val2_7_14_2_i_i_fu_2278_p3;
wire   [9:0] tmp_116_14_2_i_i_fu_2283_p3;
wire  signed [10:0] tmp_116_14_1_cast_i_s_fu_2274_p1;
wire  signed [10:0] tmp_116_14_2_cast_i_s_fu_2291_p1;
wire   [8:0] p_Val2_7_15_1_i_i_fu_2308_p3;
wire   [9:0] tmp_116_15_1_i_i_fu_2313_p3;
wire   [8:0] p_Val2_7_15_2_i_i_fu_2325_p3;
wire   [9:0] tmp_116_15_2_i_i_fu_2330_p3;
wire  signed [10:0] tmp_116_15_1_cast_i_s_fu_2321_p1;
wire  signed [10:0] tmp_116_15_2_cast_i_s_fu_2338_p1;
wire   [9:0] tmp_116_0_i_i_fu_2527_p3;
wire   [23:0] p_accu_V_0_0_i_i_fu_2520_p3;
wire  signed [23:0] tmp_116_0_cast_i_i_fu_2534_p1;
wire  signed [23:0] tmp154_cast_fu_2544_p1;
wire   [23:0] tmp153_fu_2538_p2;
wire   [9:0] tmp_116_1_i_i_fu_2553_p3;
wire   [23:0] p_accu_V_0_1_i_i_fu_2513_p3;
wire  signed [23:0] tmp_116_1_cast_i_i_fu_2560_p1;
wire  signed [23:0] tmp157_cast_fu_2570_p1;
wire   [23:0] tmp156_fu_2564_p2;
wire   [9:0] tmp_116_2_i_i_fu_2579_p3;
wire   [23:0] p_accu_V_0_2_i_i_fu_2506_p3;
wire  signed [23:0] tmp_116_2_cast_i_i_fu_2586_p1;
wire  signed [23:0] tmp160_cast_fu_2596_p1;
wire   [23:0] tmp159_fu_2590_p2;
wire   [9:0] tmp_116_3_i_i_fu_2605_p3;
wire   [23:0] p_accu_V_0_3_i_i_fu_2499_p3;
wire  signed [23:0] tmp_116_3_cast_i_i_fu_2612_p1;
wire  signed [23:0] tmp163_cast_fu_2622_p1;
wire   [23:0] tmp162_fu_2616_p2;
wire   [9:0] tmp_116_4_i_i_fu_2631_p3;
wire   [23:0] p_accu_V_0_4_i_i_fu_2492_p3;
wire  signed [23:0] tmp_116_4_cast_i_i_fu_2638_p1;
wire  signed [23:0] tmp166_cast_fu_2648_p1;
wire   [23:0] tmp165_fu_2642_p2;
wire   [9:0] tmp_116_5_i_i_fu_2657_p3;
wire   [23:0] p_accu_V_0_5_i_i_fu_2485_p3;
wire  signed [23:0] tmp_116_5_cast_i_i_fu_2664_p1;
wire  signed [23:0] tmp169_cast_fu_2674_p1;
wire   [23:0] tmp168_fu_2668_p2;
wire   [9:0] tmp_116_6_i_i_fu_2683_p3;
wire   [23:0] p_accu_V_0_6_i_i_fu_2478_p3;
wire  signed [23:0] tmp_116_6_cast_i_i_fu_2690_p1;
wire  signed [23:0] tmp172_cast_fu_2700_p1;
wire   [23:0] tmp171_fu_2694_p2;
wire   [9:0] tmp_116_7_i_i_fu_2709_p3;
wire   [23:0] p_accu_V_0_7_i_i_fu_2471_p3;
wire  signed [23:0] tmp_116_7_cast_i_i_fu_2716_p1;
wire  signed [23:0] tmp175_cast_fu_2726_p1;
wire   [23:0] tmp174_fu_2720_p2;
wire   [9:0] tmp_116_8_i_i_fu_2735_p3;
wire   [23:0] p_accu_V_0_8_i_i_fu_2464_p3;
wire  signed [23:0] tmp_116_8_cast_i_i_fu_2742_p1;
wire  signed [23:0] tmp178_cast_fu_2752_p1;
wire   [23:0] tmp177_fu_2746_p2;
wire   [9:0] tmp_116_9_i_i_fu_2761_p3;
wire   [23:0] p_accu_V_0_9_i_i_fu_2457_p3;
wire  signed [23:0] tmp_116_9_cast_i_i_fu_2768_p1;
wire  signed [23:0] tmp181_cast_fu_2778_p1;
wire   [23:0] tmp180_fu_2772_p2;
wire   [9:0] tmp_116_10_i_i_fu_2787_p3;
wire   [23:0] p_accu_V_0_10_i_i_fu_2450_p3;
wire  signed [23:0] tmp_116_10_cast_i_i_fu_2794_p1;
wire  signed [23:0] tmp184_cast_fu_2804_p1;
wire   [23:0] tmp183_fu_2798_p2;
wire   [9:0] tmp_116_11_i_i_fu_2813_p3;
wire   [23:0] p_accu_V_0_11_i_i_fu_2443_p3;
wire  signed [23:0] tmp_116_11_cast_i_i_fu_2820_p1;
wire  signed [23:0] tmp187_cast_fu_2830_p1;
wire   [23:0] tmp186_fu_2824_p2;
wire   [9:0] tmp_116_12_i_i_fu_2839_p3;
wire   [23:0] p_accu_V_0_12_i_i_fu_2436_p3;
wire  signed [23:0] tmp_116_12_cast_i_i_fu_2846_p1;
wire  signed [23:0] tmp190_cast_fu_2856_p1;
wire   [23:0] tmp189_fu_2850_p2;
wire   [9:0] tmp_116_13_i_i_fu_2865_p3;
wire   [23:0] p_accu_V_0_13_i_i_fu_2429_p3;
wire  signed [23:0] tmp_116_13_cast_i_i_fu_2872_p1;
wire  signed [23:0] tmp193_cast_fu_2882_p1;
wire   [23:0] tmp192_fu_2876_p2;
wire   [9:0] tmp_116_14_i_i_fu_2891_p3;
wire   [23:0] p_accu_V_0_14_i_i_fu_2422_p3;
wire  signed [23:0] tmp_116_14_cast_i_i_fu_2898_p1;
wire  signed [23:0] tmp196_cast_fu_2908_p1;
wire   [23:0] tmp195_fu_2902_p2;
wire   [9:0] tmp_116_15_i_i_fu_2917_p3;
wire   [23:0] p_accu_V_0_15_i_i_fu_2415_p3;
wire  signed [23:0] tmp_116_15_cast_i_i_fu_2924_p1;
wire  signed [23:0] tmp199_cast_fu_2934_p1;
wire   [23:0] tmp198_fu_2928_p2;
wire    ap_CS_fsm_state10;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_723;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
end

BlackBoxJam_mux_9hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 24 ),
    .din4_WIDTH( 24 ),
    .din5_WIDTH( 24 ),
    .din6_WIDTH( 24 ),
    .din7_WIDTH( 24 ),
    .din8_WIDTH( 24 ),
    .din9_WIDTH( 4 ),
    .dout_WIDTH( 24 ))
BlackBoxJam_mux_9hbi_U44(
    .din0(inputBuf_8_V_2_fu_228),
    .din1(inputBuf_8_V_13_fu_232),
    .din2(inputBuf_8_V_11_fu_236),
    .din3(inputBuf_8_V_9_fu_240),
    .din4(inputBuf_8_V_7_fu_244),
    .din5(inputBuf_8_V_5_fu_248),
    .din6(inputBuf_8_V_3_fu_252),
    .din7(inputBuf_8_V_16_fu_256),
    .din8(inputBuf_8_V_18_fu_260),
    .din9(tmp_1267_reg_3306),
    .dout(inElem_V_fu_874_p11)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_723)) begin
        if (((tmp_i_i_1069_reg_3302 == 1'd0) & (exitcond_i_i_reg_3293 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_act_m_val_V_reg_710 <= inElem_V_fu_874_p11;
        end else if (((tmp_i_i_1069_reg_3302 == 1'd1) & (exitcond_i_i_reg_3293 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_act_m_val_V_reg_710 <= in_V_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_act_m_val_V_reg_710 <= ap_phi_reg_pp0_iter1_act_m_val_V_reg_710;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_i_i_fu_750_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_i_i_reg_699 <= i_fu_755_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        i_i_i_reg_699 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_32_i_i_fu_808_p2 == 1'd1) & (exitcond_i_i_fu_750_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        nf_assign_fu_224 <= p_i_i_fu_834_p3;
    end else if ((~((tmp_loc_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        nf_assign_fu_224 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_32_i_i_fu_808_p2 == 1'd0) & (exitcond_i_i_fu_750_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sf_5_fu_220 <= sf_fu_802_p2;
    end else if (((~((tmp_loc_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (tmp_32_i_i_fu_808_p2 == 1'd1) & (exitcond_i_i_fu_750_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        sf_5_fu_220 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_32_i_i_reg_3354 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tile_assign_fu_216 <= p_4_i_i_fu_1211_p3;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_32_i_i_reg_3354 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tile_assign_fu_216 <= tile_fu_1200_p2;
    end else if ((~((tmp_loc_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        tile_assign_fu_216 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        accu_0_0_V_reg_4023 <= accu_0_0_V_fu_2547_p2;
        accu_0_10_V_reg_4073 <= accu_0_10_V_fu_2807_p2;
        accu_0_11_V_reg_4078 <= accu_0_11_V_fu_2833_p2;
        accu_0_12_V_reg_4083 <= accu_0_12_V_fu_2859_p2;
        accu_0_13_V_reg_4088 <= accu_0_13_V_fu_2885_p2;
        accu_0_14_V_reg_4093 <= accu_0_14_V_fu_2911_p2;
        accu_0_15_V_reg_4098 <= accu_0_15_V_fu_2937_p2;
        accu_0_1_V_reg_4028 <= accu_0_1_V_fu_2573_p2;
        accu_0_2_V_reg_4033 <= accu_0_2_V_fu_2599_p2;
        accu_0_3_V_reg_4038 <= accu_0_3_V_fu_2625_p2;
        accu_0_4_V_reg_4043 <= accu_0_4_V_fu_2651_p2;
        accu_0_5_V_reg_4048 <= accu_0_5_V_fu_2677_p2;
        accu_0_6_V_reg_4053 <= accu_0_6_V_fu_2703_p2;
        accu_0_7_V_reg_4058 <= accu_0_7_V_fu_2729_p2;
        accu_0_8_V_reg_4063 <= accu_0_8_V_fu_2755_p2;
        accu_0_9_V_reg_4068 <= accu_0_9_V_fu_2781_p2;
        nf_assign_load_reg_3358_pp0_iter2_reg <= nf_assign_load_reg_3358_pp0_iter1_reg;
        p_Val2_7_0_i_i_reg_3783 <= p_Val2_7_0_i_i_fu_1596_p3;
        p_Val2_7_10_i_i_reg_3883 <= p_Val2_7_10_i_i_fu_2066_p3;
        p_Val2_7_11_i_i_reg_3893 <= p_Val2_7_11_i_i_fu_2113_p3;
        p_Val2_7_12_i_i_reg_3903 <= p_Val2_7_12_i_i_fu_2160_p3;
        p_Val2_7_13_i_i_reg_3913 <= p_Val2_7_13_i_i_fu_2207_p3;
        p_Val2_7_14_i_i_reg_3923 <= p_Val2_7_14_i_i_fu_2254_p3;
        p_Val2_7_15_i_i_reg_3933 <= p_Val2_7_15_i_i_fu_2301_p3;
        p_Val2_7_1_i_i_reg_3793 <= p_Val2_7_1_i_i_fu_1643_p3;
        p_Val2_7_2_i_i_reg_3803 <= p_Val2_7_2_i_i_fu_1690_p3;
        p_Val2_7_3_i_i_reg_3813 <= p_Val2_7_3_i_i_fu_1737_p3;
        p_Val2_7_4_i_i_reg_3823 <= p_Val2_7_4_i_i_fu_1784_p3;
        p_Val2_7_5_i_i_reg_3833 <= p_Val2_7_5_i_i_fu_1831_p3;
        p_Val2_7_6_i_i_reg_3843 <= p_Val2_7_6_i_i_fu_1878_p3;
        p_Val2_7_7_i_i_reg_3853 <= p_Val2_7_7_i_i_fu_1925_p3;
        p_Val2_7_8_i_i_reg_3863 <= p_Val2_7_8_i_i_fu_1972_p3;
        p_Val2_7_9_i_i_reg_3873 <= p_Val2_7_9_i_i_fu_2019_p3;
        ret_V_2_0_1_i_i_reg_3493 <= ret_V_2_0_1_i_i_fu_1253_p2;
        ret_V_2_0_2_i_i_reg_3538 <= ret_V_2_0_2_i_i_fu_1281_p2;
        tmp154_reg_3788[10 : 1] <= tmp154_fu_1637_p2[10 : 1];
        tmp157_reg_3798[10 : 1] <= tmp157_fu_1684_p2[10 : 1];
        tmp160_reg_3808[10 : 1] <= tmp160_fu_1731_p2[10 : 1];
        tmp163_reg_3818[10 : 1] <= tmp163_fu_1778_p2[10 : 1];
        tmp166_reg_3828[10 : 1] <= tmp166_fu_1825_p2[10 : 1];
        tmp169_reg_3838[10 : 1] <= tmp169_fu_1872_p2[10 : 1];
        tmp172_reg_3848[10 : 1] <= tmp172_fu_1919_p2[10 : 1];
        tmp175_reg_3858[10 : 1] <= tmp175_fu_1966_p2[10 : 1];
        tmp178_reg_3868[10 : 1] <= tmp178_fu_2013_p2[10 : 1];
        tmp181_reg_3878[10 : 1] <= tmp181_fu_2060_p2[10 : 1];
        tmp184_reg_3888[10 : 1] <= tmp184_fu_2107_p2[10 : 1];
        tmp187_reg_3898[10 : 1] <= tmp187_fu_2154_p2[10 : 1];
        tmp190_reg_3908[10 : 1] <= tmp190_fu_2201_p2[10 : 1];
        tmp193_reg_3918[10 : 1] <= tmp193_fu_2248_p2[10 : 1];
        tmp196_reg_3928[10 : 1] <= tmp196_fu_2295_p2[10 : 1];
        tmp199_reg_3938[10 : 1] <= tmp199_fu_2342_p2[10 : 1];
        tmp_112_0_1_i_i_reg_3473 <= tmp_112_0_1_i_i_fu_1249_p1;
        tmp_112_0_2_i_i_reg_3518 <= tmp_112_0_2_i_i_fu_1277_p1;
        tmp_1268_reg_3458 <= tmp_1268_fu_1223_p1;
        tmp_1269_reg_3463 <= tmp_1269_fu_1227_p1;
        tmp_1270_reg_3468 <= weights0_m_weights_V_q0[32'd1];
        tmp_1271_reg_3513 <= weights0_m_weights_V_q0[32'd2];
        tmp_1272_reg_3558 <= tmp_1272_fu_1287_p1;
        tmp_1273_reg_3563 <= weights0_m_weights_V_1_q0[32'd1];
        tmp_1274_reg_3568 <= weights0_m_weights_V_1_q0[32'd2];
        tmp_1275_reg_3573 <= tmp_1275_fu_1307_p1;
        tmp_1276_reg_3578 <= weights0_m_weights_V_2_q0[32'd1];
        tmp_1277_reg_3583 <= weights0_m_weights_V_2_q0[32'd2];
        tmp_1278_reg_3588 <= tmp_1278_fu_1327_p1;
        tmp_1279_reg_3593 <= weights0_m_weights_V_3_q0[32'd1];
        tmp_1280_reg_3598 <= weights0_m_weights_V_3_q0[32'd2];
        tmp_1281_reg_3603 <= tmp_1281_fu_1347_p1;
        tmp_1282_reg_3608 <= weights0_m_weights_V_4_q0[32'd1];
        tmp_1283_reg_3613 <= weights0_m_weights_V_4_q0[32'd2];
        tmp_1284_reg_3618 <= tmp_1284_fu_1367_p1;
        tmp_1285_reg_3623 <= weights0_m_weights_V_5_q0[32'd1];
        tmp_1286_reg_3628 <= weights0_m_weights_V_5_q0[32'd2];
        tmp_1287_reg_3633 <= tmp_1287_fu_1387_p1;
        tmp_1288_reg_3638 <= weights0_m_weights_V_6_q0[32'd1];
        tmp_1289_reg_3643 <= weights0_m_weights_V_6_q0[32'd2];
        tmp_1290_reg_3648 <= tmp_1290_fu_1407_p1;
        tmp_1291_reg_3653 <= weights0_m_weights_V_7_q0[32'd1];
        tmp_1292_reg_3658 <= weights0_m_weights_V_7_q0[32'd2];
        tmp_1293_reg_3663 <= tmp_1293_fu_1427_p1;
        tmp_1294_reg_3668 <= weights0_m_weights_V_8_q0[32'd1];
        tmp_1295_reg_3673 <= weights0_m_weights_V_8_q0[32'd2];
        tmp_1296_reg_3678 <= tmp_1296_fu_1447_p1;
        tmp_1297_reg_3683 <= weights0_m_weights_V_9_q0[32'd1];
        tmp_1298_reg_3688 <= weights0_m_weights_V_9_q0[32'd2];
        tmp_1299_reg_3693 <= tmp_1299_fu_1467_p1;
        tmp_1300_reg_3698 <= weights0_m_weights_V_10_q0[32'd1];
        tmp_1301_reg_3703 <= weights0_m_weights_V_10_q0[32'd2];
        tmp_1302_reg_3708 <= tmp_1302_fu_1487_p1;
        tmp_1303_reg_3713 <= weights0_m_weights_V_11_q0[32'd1];
        tmp_1304_reg_3718 <= weights0_m_weights_V_11_q0[32'd2];
        tmp_1305_reg_3723 <= tmp_1305_fu_1507_p1;
        tmp_1306_reg_3728 <= weights0_m_weights_V_12_q0[32'd1];
        tmp_1307_reg_3733 <= weights0_m_weights_V_12_q0[32'd2];
        tmp_1308_reg_3738 <= tmp_1308_fu_1527_p1;
        tmp_1309_reg_3743 <= weights0_m_weights_V_13_q0[32'd1];
        tmp_1310_reg_3748 <= weights0_m_weights_V_13_q0[32'd2];
        tmp_1311_reg_3753 <= tmp_1311_fu_1547_p1;
        tmp_1312_reg_3758 <= weights0_m_weights_V_14_q0[32'd1];
        tmp_1313_reg_3763 <= weights0_m_weights_V_14_q0[32'd2];
        tmp_1314_reg_3768 <= tmp_1314_fu_1567_p1;
        tmp_1315_reg_3773 <= weights0_m_weights_V_15_q0[32'd1];
        tmp_1316_reg_3778 <= weights0_m_weights_V_15_q0[32'd2];
        tmp_31_i_i_reg_3334_pp0_iter2_reg <= tmp_31_i_i_reg_3334_pp0_iter1_reg;
        tmp_31_i_i_reg_3334_pp0_iter3_reg <= tmp_31_i_i_reg_3334_pp0_iter2_reg;
        tmp_32_i_i_reg_3354_pp0_iter2_reg <= tmp_32_i_i_reg_3354_pp0_iter1_reg;
        tmp_32_i_i_reg_3354_pp0_iter3_reg <= tmp_32_i_i_reg_3354_pp0_iter2_reg;
        tmp_32_i_i_reg_3354_pp0_iter4_reg <= tmp_32_i_i_reg_3354_pp0_iter3_reg;
        tmp_32_i_i_reg_3354_pp0_iter5_reg <= tmp_32_i_i_reg_3354_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        accu_V_0_0_i_i_fu_152 <= accu_0_0_V_fu_2547_p2;
        accu_V_0_10_i_i_fu_192 <= accu_0_10_V_fu_2807_p2;
        accu_V_0_11_i_i_fu_196 <= accu_0_11_V_fu_2833_p2;
        accu_V_0_12_i_i_fu_200 <= accu_0_12_V_fu_2859_p2;
        accu_V_0_13_i_i_fu_204 <= accu_0_13_V_fu_2885_p2;
        accu_V_0_14_i_i_fu_208 <= accu_0_14_V_fu_2911_p2;
        accu_V_0_15_i_i_fu_212 <= accu_0_15_V_fu_2937_p2;
        accu_V_0_1_i_i_fu_156 <= accu_0_1_V_fu_2573_p2;
        accu_V_0_2_i_i_fu_160 <= accu_0_2_V_fu_2599_p2;
        accu_V_0_3_i_i_fu_164 <= accu_0_3_V_fu_2625_p2;
        accu_V_0_4_i_i_fu_168 <= accu_0_4_V_fu_2651_p2;
        accu_V_0_5_i_i_fu_172 <= accu_0_5_V_fu_2677_p2;
        accu_V_0_6_i_i_fu_176 <= accu_0_6_V_fu_2703_p2;
        accu_V_0_7_i_i_fu_180 <= accu_0_7_V_fu_2729_p2;
        accu_V_0_8_i_i_fu_184 <= accu_0_8_V_fu_2755_p2;
        accu_V_0_9_i_i_fu_188 <= accu_0_9_V_fu_2781_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_act_m_val_V_reg_710 <= ap_phi_reg_pp0_iter0_act_m_val_V_reg_710;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond_i_i_reg_3293 <= exitcond_i_i_fu_750_p2;
        nf_assign_load_reg_3358_pp0_iter1_reg <= nf_assign_load_reg_3358;
        tmp_31_i_i_reg_3334_pp0_iter1_reg <= tmp_31_i_i_reg_3334;
        tmp_32_i_i_reg_3354_pp0_iter1_reg <= tmp_32_i_i_reg_3354;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op88_read_state4 == 1'b1))) begin
        inputBuf_8_V_11_fu_236 <= inputBuf_8_V_21_fu_1103_p3;
        inputBuf_8_V_13_fu_232 <= inputBuf_8_V_23_fu_1118_p3;
        inputBuf_8_V_16_fu_256 <= inputBuf_8_V_1_fu_999_p3;
        inputBuf_8_V_18_fu_260 <= inputBuf_8_V_fu_967_p3;
        inputBuf_8_V_2_fu_228 <= inputBuf_8_V_24_fu_1125_p3;
        inputBuf_8_V_3_fu_252 <= inputBuf_8_V_4_fu_1023_p3;
        inputBuf_8_V_5_fu_248 <= inputBuf_8_V_6_fu_1047_p3;
        inputBuf_8_V_7_fu_244 <= inputBuf_8_V_8_fu_1063_p3;
        inputBuf_8_V_9_fu_240 <= inputBuf_8_V_20_fu_1087_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_32_i_i_fu_808_p2 == 1'd1) & (exitcond_i_i_fu_750_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        nf_assign_load_reg_3358 <= nf_assign_fu_224;
        tmp_33_i_i_reg_3363 <= tmp_33_i_i_fu_828_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_i_i_1069_fu_764_p2 == 1'd1) & (exitcond_i_i_fu_750_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sel_tmp6_reg_3321 <= sel_tmp6_fu_781_p2;
        sel_tmp7_reg_3327 <= sel_tmp7_fu_787_p2;
        tmp_1266_reg_3311 <= tmp_1266_fu_777_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_32_i_i_reg_3354_pp0_iter3_reg == 1'd1))) begin
        threshs0_m_threshold_17_reg_4103 <= threshs0_m_threshold_15_q0;
        threshs0_m_threshold_19_reg_4108 <= threshs0_m_threshold_14_q0;
        threshs0_m_threshold_21_reg_4113 <= threshs0_m_threshold_7_q0;
        threshs0_m_threshold_23_reg_4118 <= threshs0_m_threshold_6_q0;
        threshs0_m_threshold_25_reg_4123 <= threshs0_m_threshold_5_q0;
        threshs0_m_threshold_27_reg_4128 <= threshs0_m_threshold_4_q0;
        threshs0_m_threshold_29_reg_4133 <= threshs0_m_threshold_3_q0;
        threshs0_m_threshold_31_reg_4138 <= threshs0_m_threshold_2_q0;
        threshs0_m_threshold_33_reg_4143 <= threshs0_m_threshold_1_q0;
        threshs0_m_threshold_35_reg_4148 <= threshs0_m_threshold_q0;
        threshs0_m_threshold_37_reg_4153 <= threshs0_m_threshold_13_q0;
        threshs0_m_threshold_39_reg_4158 <= threshs0_m_threshold_12_q0;
        threshs0_m_threshold_41_reg_4163 <= threshs0_m_threshold_11_q0;
        threshs0_m_threshold_43_reg_4168 <= threshs0_m_threshold_10_q0;
        threshs0_m_threshold_45_reg_4173 <= threshs0_m_threshold_9_q0;
        threshs0_m_threshold_47_reg_4178 <= threshs0_m_threshold_8_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_i_i_1069_fu_764_p2 == 1'd0) & (exitcond_i_i_fu_750_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_1267_reg_3306 <= tmp_1267_fu_773_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_i_i_fu_750_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_31_i_i_reg_3334 <= tmp_31_i_i_fu_796_p2;
        tmp_32_i_i_reg_3354 <= tmp_32_i_i_fu_808_p2;
        tmp_i_i_1069_reg_3302 <= tmp_i_i_1069_fu_764_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_32_i_i_reg_3354_pp0_iter4_reg == 1'd1))) begin
        tmp_i1215_i_i_reg_4188 <= tmp_i1215_i_i_fu_3027_p2;
        tmp_i1216_i_i_reg_4193 <= tmp_i1216_i_i_fu_3031_p2;
        tmp_i1217_i_i_reg_4198 <= tmp_i1217_i_i_fu_3035_p2;
        tmp_i1218_i_i_reg_4203 <= tmp_i1218_i_i_fu_3039_p2;
        tmp_i1219_i_i_reg_4208 <= tmp_i1219_i_i_fu_3043_p2;
        tmp_i1220_i_i_reg_4213 <= tmp_i1220_i_i_fu_3047_p2;
        tmp_i1221_i_i_reg_4218 <= tmp_i1221_i_i_fu_3051_p2;
        tmp_i1222_i_i_reg_4223 <= tmp_i1222_i_i_fu_3055_p2;
        tmp_i1223_i_i_reg_4228 <= tmp_i1223_i_i_fu_3059_p2;
        tmp_i1224_i_i_reg_4233 <= tmp_i1224_i_i_fu_3063_p2;
        tmp_i1225_i_i_reg_4238 <= tmp_i1225_i_i_fu_3067_p2;
        tmp_i1226_i_i_reg_4243 <= tmp_i1226_i_i_fu_3071_p2;
        tmp_i1227_i_i_reg_4248 <= tmp_i1227_i_i_fu_3075_p2;
        tmp_i1228_i_i_reg_4253 <= tmp_i1228_i_i_fu_3079_p2;
        tmp_i1229_i_i_reg_4258 <= tmp_i1229_i_i_fu_3083_p2;
        tmp_i_i_i_reg_4183 <= tmp_i_i_i_fu_3023_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_i_i_reg_3288[31 : 2] <= tmp_i_i_fu_744_p2[31 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((~((tmp_loc_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_loc_read_reg_3282 <= tmp_loc_dout;
    end
end

always @ (*) begin
    if ((exitcond_i_i_fu_750_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_i_i_1069_reg_3302 == 1'd1) & (exitcond_i_i_reg_3293 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_V_V_blk_n = in_V_V_empty_n;
    end else begin
        in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op88_read_state4 == 1'b1))) begin
        in_V_V_read = 1'b1;
    end else begin
        in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_32_i_i_reg_3354_pp0_iter5_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_V_V_blk_n = out_V_V_full_n;
    end else begin
        out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_32_i_i_reg_3354_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_V_V_write = 1'b1;
    end else begin
        out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        threshs0_m_threshold_10_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        threshs0_m_threshold_11_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        threshs0_m_threshold_12_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        threshs0_m_threshold_13_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        threshs0_m_threshold_14_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        threshs0_m_threshold_15_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        threshs0_m_threshold_1_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        threshs0_m_threshold_2_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        threshs0_m_threshold_3_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        threshs0_m_threshold_4_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        threshs0_m_threshold_5_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        threshs0_m_threshold_6_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        threshs0_m_threshold_7_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        threshs0_m_threshold_8_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        threshs0_m_threshold_9_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        threshs0_m_threshold_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_loc_blk_n = tmp_loc_empty_n;
    end else begin
        tmp_loc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((tmp_loc_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_loc_read = 1'b1;
    end else begin
        tmp_loc_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_10_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_11_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_12_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_13_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_14_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_15_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_1_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_2_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_3_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_4_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_5_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_6_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_7_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_8_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_9_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((tmp_loc_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_i_i_fu_750_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter5 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter6 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_i_i_fu_750_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter5 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter6 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign accu_0_0_V_fu_2547_p2 = ($signed(tmp154_cast_fu_2544_p1) + $signed(tmp153_fu_2538_p2));

assign accu_0_10_V_fu_2807_p2 = ($signed(tmp184_cast_fu_2804_p1) + $signed(tmp183_fu_2798_p2));

assign accu_0_11_V_fu_2833_p2 = ($signed(tmp187_cast_fu_2830_p1) + $signed(tmp186_fu_2824_p2));

assign accu_0_12_V_fu_2859_p2 = ($signed(tmp190_cast_fu_2856_p1) + $signed(tmp189_fu_2850_p2));

assign accu_0_13_V_fu_2885_p2 = ($signed(tmp193_cast_fu_2882_p1) + $signed(tmp192_fu_2876_p2));

assign accu_0_14_V_fu_2911_p2 = ($signed(tmp196_cast_fu_2908_p1) + $signed(tmp195_fu_2902_p2));

assign accu_0_15_V_fu_2937_p2 = ($signed(tmp199_cast_fu_2934_p1) + $signed(tmp198_fu_2928_p2));

assign accu_0_1_V_fu_2573_p2 = ($signed(tmp157_cast_fu_2570_p1) + $signed(tmp156_fu_2564_p2));

assign accu_0_2_V_fu_2599_p2 = ($signed(tmp160_cast_fu_2596_p1) + $signed(tmp159_fu_2590_p2));

assign accu_0_3_V_fu_2625_p2 = ($signed(tmp163_cast_fu_2622_p1) + $signed(tmp162_fu_2616_p2));

assign accu_0_4_V_fu_2651_p2 = ($signed(tmp166_cast_fu_2648_p1) + $signed(tmp165_fu_2642_p2));

assign accu_0_5_V_fu_2677_p2 = ($signed(tmp169_cast_fu_2674_p1) + $signed(tmp168_fu_2668_p2));

assign accu_0_6_V_fu_2703_p2 = ($signed(tmp172_cast_fu_2700_p1) + $signed(tmp171_fu_2694_p2));

assign accu_0_7_V_fu_2729_p2 = ($signed(tmp175_cast_fu_2726_p1) + $signed(tmp174_fu_2720_p2));

assign accu_0_8_V_fu_2755_p2 = ($signed(tmp178_cast_fu_2752_p1) + $signed(tmp177_fu_2746_p2));

assign accu_0_9_V_fu_2781_p2 = ($signed(tmp181_cast_fu_2778_p1) + $signed(tmp180_fu_2772_p2));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((out_V_V_full_n == 1'b0) & (tmp_32_i_i_reg_3354_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op88_read_state4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((out_V_V_full_n == 1'b0) & (tmp_32_i_i_reg_3354_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op88_read_state4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((out_V_V_full_n == 1'b0) & (tmp_32_i_i_reg_3354_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op88_read_state4 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((tmp_loc_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = ((in_V_V_empty_n == 1'b0) & (ap_predicate_op88_read_state4 == 1'b1));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_pp0_stage0_iter6 = ((out_V_V_full_n == 1'b0) & (tmp_32_i_i_reg_3354_pp0_iter5_reg == 1'd1));
end

always @ (*) begin
    ap_condition_723 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_act_m_val_V_reg_710 = 'bx;

always @ (*) begin
    ap_predicate_op88_read_state4 = ((tmp_i_i_1069_reg_3302 == 1'd1) & (exitcond_i_i_reg_3293 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign arg_V_read_assign_1_fu_1239_p4 = {{ap_phi_reg_pp0_iter2_act_m_val_V_reg_710[15:8]}};

assign arg_V_read_assign_2_fu_1267_p4 = {{ap_phi_reg_pp0_iter2_act_m_val_V_reg_710[23:16]}};

assign exitcond_i_i_fu_750_p2 = ((i_i_i_reg_699 == tmp_i_i_reg_3288) ? 1'b1 : 1'b0);

assign i_fu_755_p2 = (i_i_i_reg_699 + 32'd1);

assign inputBuf_8_V_1_fu_999_p3 = ((or_cond6_fu_961_p2[0:0] === 1'b1) ? newSel2_fu_991_p3 : inputBuf_8_V_16_fu_256);

assign inputBuf_8_V_20_fu_1087_p3 = ((or_cond4_fu_949_p2[0:0] === 1'b1) ? newSel9_fu_1079_p3 : inputBuf_8_V_9_fu_240);

assign inputBuf_8_V_21_fu_1103_p3 = ((or_cond_fu_927_p2[0:0] === 1'b1) ? inputBuf_8_V_11_fu_236 : newSel10_fu_1095_p3);

assign inputBuf_8_V_22_fu_1111_p3 = ((sel_tmp6_reg_3321[0:0] === 1'b1) ? in_V_V_dout : inputBuf_8_V_13_fu_232);

assign inputBuf_8_V_23_fu_1118_p3 = ((sel_tmp7_reg_3327[0:0] === 1'b1) ? inputBuf_8_V_13_fu_232 : inputBuf_8_V_22_fu_1111_p3);

assign inputBuf_8_V_24_fu_1125_p3 = ((sel_tmp7_reg_3327[0:0] === 1'b1) ? in_V_V_dout : inputBuf_8_V_2_fu_228);

assign inputBuf_8_V_4_fu_1023_p3 = ((or_cond4_fu_949_p2[0:0] === 1'b1) ? inputBuf_8_V_3_fu_252 : newSel5_fu_1015_p3);

assign inputBuf_8_V_6_fu_1047_p3 = ((or_cond4_fu_949_p2[0:0] === 1'b1) ? inputBuf_8_V_5_fu_248 : newSel8_fu_1039_p3);

assign inputBuf_8_V_8_fu_1063_p3 = ((or_cond4_fu_949_p2[0:0] === 1'b1) ? inputBuf_8_V_7_fu_244 : newSel3_fu_1055_p3);

assign inputBuf_8_V_fu_967_p3 = ((or_cond6_fu_961_p2[0:0] === 1'b1) ? inputBuf_8_V_18_fu_260 : in_V_V_dout);

assign newSel10_fu_1095_p3 = ((sel_tmp5_fu_922_p2[0:0] === 1'b1) ? in_V_V_dout : inputBuf_8_V_11_fu_236);

assign newSel1_fu_983_p3 = ((or_cond2_fu_937_p2[0:0] === 1'b1) ? inputBuf_8_V_16_fu_256 : newSel_fu_975_p3);

assign newSel2_fu_991_p3 = ((or_cond4_fu_949_p2[0:0] === 1'b1) ? inputBuf_8_V_16_fu_256 : newSel1_fu_983_p3);

assign newSel3_fu_1055_p3 = ((sel_tmp3_fu_912_p2[0:0] === 1'b1) ? in_V_V_dout : inputBuf_8_V_7_fu_244);

assign newSel4_fu_1007_p3 = ((sel_tmp1_fu_902_p2[0:0] === 1'b1) ? in_V_V_dout : inputBuf_8_V_3_fu_252);

assign newSel5_fu_1015_p3 = ((or_cond2_fu_937_p2[0:0] === 1'b1) ? inputBuf_8_V_3_fu_252 : newSel4_fu_1007_p3);

assign newSel6_fu_1071_p3 = ((sel_tmp5_fu_922_p2[0:0] === 1'b1) ? inputBuf_8_V_9_fu_240 : in_V_V_dout);

assign newSel7_fu_1031_p3 = ((sel_tmp3_fu_912_p2[0:0] === 1'b1) ? inputBuf_8_V_5_fu_248 : in_V_V_dout);

assign newSel8_fu_1039_p3 = ((or_cond2_fu_937_p2[0:0] === 1'b1) ? newSel7_fu_1031_p3 : inputBuf_8_V_5_fu_248);

assign newSel9_fu_1079_p3 = ((or_cond_fu_927_p2[0:0] === 1'b1) ? inputBuf_8_V_9_fu_240 : newSel6_fu_1071_p3);

assign newSel_fu_975_p3 = ((sel_tmp1_fu_902_p2[0:0] === 1'b1) ? inputBuf_8_V_16_fu_256 : in_V_V_dout);

assign nf_fu_822_p2 = (nf_assign_fu_224 + 32'd1);

assign or_cond1_fu_931_p2 = (sel_tmp5_fu_922_p2 | sel_tmp4_fu_917_p2);

assign or_cond2_fu_937_p2 = (sel_tmp3_fu_912_p2 | sel_tmp2_fu_907_p2);

assign or_cond3_fu_943_p2 = (sel_tmp_fu_897_p2 | sel_tmp1_fu_902_p2);

assign or_cond4_fu_949_p2 = (or_cond_fu_927_p2 | or_cond1_fu_931_p2);

assign or_cond5_fu_955_p2 = (or_cond3_fu_943_p2 | or_cond2_fu_937_p2);

assign or_cond6_fu_961_p2 = (or_cond5_fu_955_p2 | or_cond4_fu_949_p2);

assign or_cond_fu_927_p2 = (sel_tmp7_reg_3327 | sel_tmp6_reg_3321);

assign out_V_V_din = {{{{{{{{{{{{{{{{tmp_i1229_i_i_reg_4258}, {tmp_i1228_i_i_reg_4253}}, {tmp_i1227_i_i_reg_4248}}, {tmp_i1226_i_i_reg_4243}}, {tmp_i1225_i_i_reg_4238}}, {tmp_i1224_i_i_reg_4233}}, {tmp_i1223_i_i_reg_4228}}, {tmp_i1222_i_i_reg_4223}}, {tmp_i1221_i_i_reg_4218}}, {tmp_i1220_i_i_reg_4213}}, {tmp_i1219_i_i_reg_4208}}, {tmp_i1218_i_i_reg_4203}}, {tmp_i1217_i_i_reg_4198}}, {tmp_i1216_i_i_reg_4193}}, {tmp_i1215_i_i_reg_4188}}, {tmp_i_i_i_reg_4183}};

assign p_4_i_i_fu_1211_p3 = ((tmp_33_i_i_reg_3363[0:0] === 1'b1) ? 32'd0 : tile_fu_1200_p2);

assign p_Val2_7_0_1_i_i_fu_1603_p3 = ((tmp_1270_reg_3468[0:0] === 1'b1) ? tmp_112_0_1_i_i_reg_3473 : ret_V_2_0_1_i_i_reg_3493);

assign p_Val2_7_0_2_i_i_fu_1620_p3 = ((tmp_1271_reg_3513[0:0] === 1'b1) ? tmp_112_0_2_i_i_reg_3518 : ret_V_2_0_2_i_i_reg_3538);

assign p_Val2_7_0_i_i_fu_1596_p3 = ((tmp_1268_reg_3458[0:0] === 1'b1) ? tmp_112_0_i_i_fu_1587_p1 : ret_V_2_0_i_i_fu_1590_p2);

assign p_Val2_7_10_1_i_i_fu_2073_p3 = ((tmp_1300_reg_3698[0:0] === 1'b1) ? tmp_112_0_1_i_i_reg_3473 : ret_V_2_0_1_i_i_reg_3493);

assign p_Val2_7_10_2_i_i_fu_2090_p3 = ((tmp_1301_reg_3703[0:0] === 1'b1) ? tmp_112_0_2_i_i_reg_3518 : ret_V_2_0_2_i_i_reg_3538);

assign p_Val2_7_10_i_i_fu_2066_p3 = ((tmp_1299_reg_3693[0:0] === 1'b1) ? tmp_112_0_i_i_fu_1587_p1 : ret_V_2_0_i_i_fu_1590_p2);

assign p_Val2_7_11_1_i_i_fu_2120_p3 = ((tmp_1303_reg_3713[0:0] === 1'b1) ? tmp_112_0_1_i_i_reg_3473 : ret_V_2_0_1_i_i_reg_3493);

assign p_Val2_7_11_2_i_i_fu_2137_p3 = ((tmp_1304_reg_3718[0:0] === 1'b1) ? tmp_112_0_2_i_i_reg_3518 : ret_V_2_0_2_i_i_reg_3538);

assign p_Val2_7_11_i_i_fu_2113_p3 = ((tmp_1302_reg_3708[0:0] === 1'b1) ? tmp_112_0_i_i_fu_1587_p1 : ret_V_2_0_i_i_fu_1590_p2);

assign p_Val2_7_12_1_i_i_fu_2167_p3 = ((tmp_1306_reg_3728[0:0] === 1'b1) ? tmp_112_0_1_i_i_reg_3473 : ret_V_2_0_1_i_i_reg_3493);

assign p_Val2_7_12_2_i_i_fu_2184_p3 = ((tmp_1307_reg_3733[0:0] === 1'b1) ? tmp_112_0_2_i_i_reg_3518 : ret_V_2_0_2_i_i_reg_3538);

assign p_Val2_7_12_i_i_fu_2160_p3 = ((tmp_1305_reg_3723[0:0] === 1'b1) ? tmp_112_0_i_i_fu_1587_p1 : ret_V_2_0_i_i_fu_1590_p2);

assign p_Val2_7_13_1_i_i_fu_2214_p3 = ((tmp_1309_reg_3743[0:0] === 1'b1) ? tmp_112_0_1_i_i_reg_3473 : ret_V_2_0_1_i_i_reg_3493);

assign p_Val2_7_13_2_i_i_fu_2231_p3 = ((tmp_1310_reg_3748[0:0] === 1'b1) ? tmp_112_0_2_i_i_reg_3518 : ret_V_2_0_2_i_i_reg_3538);

assign p_Val2_7_13_i_i_fu_2207_p3 = ((tmp_1308_reg_3738[0:0] === 1'b1) ? tmp_112_0_i_i_fu_1587_p1 : ret_V_2_0_i_i_fu_1590_p2);

assign p_Val2_7_14_1_i_i_fu_2261_p3 = ((tmp_1312_reg_3758[0:0] === 1'b1) ? tmp_112_0_1_i_i_reg_3473 : ret_V_2_0_1_i_i_reg_3493);

assign p_Val2_7_14_2_i_i_fu_2278_p3 = ((tmp_1313_reg_3763[0:0] === 1'b1) ? tmp_112_0_2_i_i_reg_3518 : ret_V_2_0_2_i_i_reg_3538);

assign p_Val2_7_14_i_i_fu_2254_p3 = ((tmp_1311_reg_3753[0:0] === 1'b1) ? tmp_112_0_i_i_fu_1587_p1 : ret_V_2_0_i_i_fu_1590_p2);

assign p_Val2_7_15_1_i_i_fu_2308_p3 = ((tmp_1315_reg_3773[0:0] === 1'b1) ? tmp_112_0_1_i_i_reg_3473 : ret_V_2_0_1_i_i_reg_3493);

assign p_Val2_7_15_2_i_i_fu_2325_p3 = ((tmp_1316_reg_3778[0:0] === 1'b1) ? tmp_112_0_2_i_i_reg_3518 : ret_V_2_0_2_i_i_reg_3538);

assign p_Val2_7_15_i_i_fu_2301_p3 = ((tmp_1314_reg_3768[0:0] === 1'b1) ? tmp_112_0_i_i_fu_1587_p1 : ret_V_2_0_i_i_fu_1590_p2);

assign p_Val2_7_1_1_i_i_fu_1650_p3 = ((tmp_1273_reg_3563[0:0] === 1'b1) ? tmp_112_0_1_i_i_reg_3473 : ret_V_2_0_1_i_i_reg_3493);

assign p_Val2_7_1_2_i_i_fu_1667_p3 = ((tmp_1274_reg_3568[0:0] === 1'b1) ? tmp_112_0_2_i_i_reg_3518 : ret_V_2_0_2_i_i_reg_3538);

assign p_Val2_7_1_i_i_fu_1643_p3 = ((tmp_1272_reg_3558[0:0] === 1'b1) ? tmp_112_0_i_i_fu_1587_p1 : ret_V_2_0_i_i_fu_1590_p2);

assign p_Val2_7_2_1_i_i_fu_1697_p3 = ((tmp_1276_reg_3578[0:0] === 1'b1) ? tmp_112_0_1_i_i_reg_3473 : ret_V_2_0_1_i_i_reg_3493);

assign p_Val2_7_2_2_i_i_fu_1714_p3 = ((tmp_1277_reg_3583[0:0] === 1'b1) ? tmp_112_0_2_i_i_reg_3518 : ret_V_2_0_2_i_i_reg_3538);

assign p_Val2_7_2_i_i_fu_1690_p3 = ((tmp_1275_reg_3573[0:0] === 1'b1) ? tmp_112_0_i_i_fu_1587_p1 : ret_V_2_0_i_i_fu_1590_p2);

assign p_Val2_7_3_1_i_i_fu_1744_p3 = ((tmp_1279_reg_3593[0:0] === 1'b1) ? tmp_112_0_1_i_i_reg_3473 : ret_V_2_0_1_i_i_reg_3493);

assign p_Val2_7_3_2_i_i_fu_1761_p3 = ((tmp_1280_reg_3598[0:0] === 1'b1) ? tmp_112_0_2_i_i_reg_3518 : ret_V_2_0_2_i_i_reg_3538);

assign p_Val2_7_3_i_i_fu_1737_p3 = ((tmp_1278_reg_3588[0:0] === 1'b1) ? tmp_112_0_i_i_fu_1587_p1 : ret_V_2_0_i_i_fu_1590_p2);

assign p_Val2_7_4_1_i_i_fu_1791_p3 = ((tmp_1282_reg_3608[0:0] === 1'b1) ? tmp_112_0_1_i_i_reg_3473 : ret_V_2_0_1_i_i_reg_3493);

assign p_Val2_7_4_2_i_i_fu_1808_p3 = ((tmp_1283_reg_3613[0:0] === 1'b1) ? tmp_112_0_2_i_i_reg_3518 : ret_V_2_0_2_i_i_reg_3538);

assign p_Val2_7_4_i_i_fu_1784_p3 = ((tmp_1281_reg_3603[0:0] === 1'b1) ? tmp_112_0_i_i_fu_1587_p1 : ret_V_2_0_i_i_fu_1590_p2);

assign p_Val2_7_5_1_i_i_fu_1838_p3 = ((tmp_1285_reg_3623[0:0] === 1'b1) ? tmp_112_0_1_i_i_reg_3473 : ret_V_2_0_1_i_i_reg_3493);

assign p_Val2_7_5_2_i_i_fu_1855_p3 = ((tmp_1286_reg_3628[0:0] === 1'b1) ? tmp_112_0_2_i_i_reg_3518 : ret_V_2_0_2_i_i_reg_3538);

assign p_Val2_7_5_i_i_fu_1831_p3 = ((tmp_1284_reg_3618[0:0] === 1'b1) ? tmp_112_0_i_i_fu_1587_p1 : ret_V_2_0_i_i_fu_1590_p2);

assign p_Val2_7_6_1_i_i_fu_1885_p3 = ((tmp_1288_reg_3638[0:0] === 1'b1) ? tmp_112_0_1_i_i_reg_3473 : ret_V_2_0_1_i_i_reg_3493);

assign p_Val2_7_6_2_i_i_fu_1902_p3 = ((tmp_1289_reg_3643[0:0] === 1'b1) ? tmp_112_0_2_i_i_reg_3518 : ret_V_2_0_2_i_i_reg_3538);

assign p_Val2_7_6_i_i_fu_1878_p3 = ((tmp_1287_reg_3633[0:0] === 1'b1) ? tmp_112_0_i_i_fu_1587_p1 : ret_V_2_0_i_i_fu_1590_p2);

assign p_Val2_7_7_1_i_i_fu_1932_p3 = ((tmp_1291_reg_3653[0:0] === 1'b1) ? tmp_112_0_1_i_i_reg_3473 : ret_V_2_0_1_i_i_reg_3493);

assign p_Val2_7_7_2_i_i_fu_1949_p3 = ((tmp_1292_reg_3658[0:0] === 1'b1) ? tmp_112_0_2_i_i_reg_3518 : ret_V_2_0_2_i_i_reg_3538);

assign p_Val2_7_7_i_i_fu_1925_p3 = ((tmp_1290_reg_3648[0:0] === 1'b1) ? tmp_112_0_i_i_fu_1587_p1 : ret_V_2_0_i_i_fu_1590_p2);

assign p_Val2_7_8_1_i_i_fu_1979_p3 = ((tmp_1294_reg_3668[0:0] === 1'b1) ? tmp_112_0_1_i_i_reg_3473 : ret_V_2_0_1_i_i_reg_3493);

assign p_Val2_7_8_2_i_i_fu_1996_p3 = ((tmp_1295_reg_3673[0:0] === 1'b1) ? tmp_112_0_2_i_i_reg_3518 : ret_V_2_0_2_i_i_reg_3538);

assign p_Val2_7_8_i_i_fu_1972_p3 = ((tmp_1293_reg_3663[0:0] === 1'b1) ? tmp_112_0_i_i_fu_1587_p1 : ret_V_2_0_i_i_fu_1590_p2);

assign p_Val2_7_9_1_i_i_fu_2026_p3 = ((tmp_1297_reg_3683[0:0] === 1'b1) ? tmp_112_0_1_i_i_reg_3473 : ret_V_2_0_1_i_i_reg_3493);

assign p_Val2_7_9_2_i_i_fu_2043_p3 = ((tmp_1298_reg_3688[0:0] === 1'b1) ? tmp_112_0_2_i_i_reg_3518 : ret_V_2_0_2_i_i_reg_3538);

assign p_Val2_7_9_i_i_fu_2019_p3 = ((tmp_1296_reg_3678[0:0] === 1'b1) ? tmp_112_0_i_i_fu_1587_p1 : ret_V_2_0_i_i_fu_1590_p2);

assign p_accu_V_0_0_i_i_fu_2520_p3 = ((tmp_31_i_i_reg_3334_pp0_iter3_reg[0:0] === 1'b1) ? 24'd0 : accu_V_0_0_i_i_fu_152);

assign p_accu_V_0_10_i_i_fu_2450_p3 = ((tmp_31_i_i_reg_3334_pp0_iter3_reg[0:0] === 1'b1) ? 24'd0 : accu_V_0_10_i_i_fu_192);

assign p_accu_V_0_11_i_i_fu_2443_p3 = ((tmp_31_i_i_reg_3334_pp0_iter3_reg[0:0] === 1'b1) ? 24'd0 : accu_V_0_11_i_i_fu_196);

assign p_accu_V_0_12_i_i_fu_2436_p3 = ((tmp_31_i_i_reg_3334_pp0_iter3_reg[0:0] === 1'b1) ? 24'd0 : accu_V_0_12_i_i_fu_200);

assign p_accu_V_0_13_i_i_fu_2429_p3 = ((tmp_31_i_i_reg_3334_pp0_iter3_reg[0:0] === 1'b1) ? 24'd0 : accu_V_0_13_i_i_fu_204);

assign p_accu_V_0_14_i_i_fu_2422_p3 = ((tmp_31_i_i_reg_3334_pp0_iter3_reg[0:0] === 1'b1) ? 24'd0 : accu_V_0_14_i_i_fu_208);

assign p_accu_V_0_15_i_i_fu_2415_p3 = ((tmp_31_i_i_reg_3334_pp0_iter3_reg[0:0] === 1'b1) ? 24'd0 : accu_V_0_15_i_i_fu_212);

assign p_accu_V_0_1_i_i_fu_2513_p3 = ((tmp_31_i_i_reg_3334_pp0_iter3_reg[0:0] === 1'b1) ? 24'd0 : accu_V_0_1_i_i_fu_156);

assign p_accu_V_0_2_i_i_fu_2506_p3 = ((tmp_31_i_i_reg_3334_pp0_iter3_reg[0:0] === 1'b1) ? 24'd0 : accu_V_0_2_i_i_fu_160);

assign p_accu_V_0_3_i_i_fu_2499_p3 = ((tmp_31_i_i_reg_3334_pp0_iter3_reg[0:0] === 1'b1) ? 24'd0 : accu_V_0_3_i_i_fu_164);

assign p_accu_V_0_4_i_i_fu_2492_p3 = ((tmp_31_i_i_reg_3334_pp0_iter3_reg[0:0] === 1'b1) ? 24'd0 : accu_V_0_4_i_i_fu_168);

assign p_accu_V_0_5_i_i_fu_2485_p3 = ((tmp_31_i_i_reg_3334_pp0_iter3_reg[0:0] === 1'b1) ? 24'd0 : accu_V_0_5_i_i_fu_172);

assign p_accu_V_0_6_i_i_fu_2478_p3 = ((tmp_31_i_i_reg_3334_pp0_iter3_reg[0:0] === 1'b1) ? 24'd0 : accu_V_0_6_i_i_fu_176);

assign p_accu_V_0_7_i_i_fu_2471_p3 = ((tmp_31_i_i_reg_3334_pp0_iter3_reg[0:0] === 1'b1) ? 24'd0 : accu_V_0_7_i_i_fu_180);

assign p_accu_V_0_8_i_i_fu_2464_p3 = ((tmp_31_i_i_reg_3334_pp0_iter3_reg[0:0] === 1'b1) ? 24'd0 : accu_V_0_8_i_i_fu_184);

assign p_accu_V_0_9_i_i_fu_2457_p3 = ((tmp_31_i_i_reg_3334_pp0_iter3_reg[0:0] === 1'b1) ? 24'd0 : accu_V_0_9_i_i_fu_188);

assign p_i_i_fu_834_p3 = ((tmp_33_i_i_fu_828_p2[0:0] === 1'b1) ? 32'd0 : nf_fu_822_p2);

assign ret_V_2_0_1_i_i_fu_1253_p2 = ($signed(9'd0) - $signed(tmp_112_0_1_i_i_fu_1249_p1));

assign ret_V_2_0_2_i_i_fu_1281_p2 = ($signed(9'd0) - $signed(tmp_112_0_2_i_i_fu_1277_p1));

assign ret_V_2_0_i_i_fu_1590_p2 = ($signed(9'd0) - $signed(tmp_112_0_i_i_fu_1587_p1));

assign sel_tmp1_fu_902_p2 = ((tmp_1266_reg_3311 == 4'd6) ? 1'b1 : 1'b0);

assign sel_tmp2_fu_907_p2 = ((tmp_1266_reg_3311 == 4'd5) ? 1'b1 : 1'b0);

assign sel_tmp3_fu_912_p2 = ((tmp_1266_reg_3311 == 4'd4) ? 1'b1 : 1'b0);

assign sel_tmp4_fu_917_p2 = ((tmp_1266_reg_3311 == 4'd3) ? 1'b1 : 1'b0);

assign sel_tmp5_fu_922_p2 = ((tmp_1266_reg_3311 == 4'd2) ? 1'b1 : 1'b0);

assign sel_tmp6_fu_781_p2 = ((tmp_1266_fu_777_p1 == 4'd1) ? 1'b1 : 1'b0);

assign sel_tmp7_fu_787_p2 = ((tmp_1266_fu_777_p1 == 4'd0) ? 1'b1 : 1'b0);

assign sel_tmp_fu_897_p2 = ((tmp_1266_reg_3311 == 4'd7) ? 1'b1 : 1'b0);

assign sf_fu_802_p2 = (32'd1 + sf_5_fu_220);

assign start_out = real_start;

assign threshs0_m_threshold_10_address0 = tmp_110_i_i_fu_2348_p1;

assign threshs0_m_threshold_11_address0 = tmp_110_i_i_fu_2348_p1;

assign threshs0_m_threshold_12_address0 = tmp_110_i_i_fu_2348_p1;

assign threshs0_m_threshold_13_address0 = tmp_110_i_i_fu_2348_p1;

assign threshs0_m_threshold_14_address0 = tmp_110_i_i_fu_2348_p1;

assign threshs0_m_threshold_15_address0 = tmp_110_i_i_fu_2348_p1;

assign threshs0_m_threshold_1_address0 = tmp_110_i_i_fu_2348_p1;

assign threshs0_m_threshold_2_address0 = tmp_110_i_i_fu_2348_p1;

assign threshs0_m_threshold_3_address0 = tmp_110_i_i_fu_2348_p1;

assign threshs0_m_threshold_4_address0 = tmp_110_i_i_fu_2348_p1;

assign threshs0_m_threshold_5_address0 = tmp_110_i_i_fu_2348_p1;

assign threshs0_m_threshold_6_address0 = tmp_110_i_i_fu_2348_p1;

assign threshs0_m_threshold_7_address0 = tmp_110_i_i_fu_2348_p1;

assign threshs0_m_threshold_8_address0 = tmp_110_i_i_fu_2348_p1;

assign threshs0_m_threshold_9_address0 = tmp_110_i_i_fu_2348_p1;

assign threshs0_m_threshold_address0 = tmp_110_i_i_fu_2348_p1;

assign tile_fu_1200_p2 = (32'd1 + tile_assign_fu_216);

assign tmp153_fu_2538_p2 = ($signed(p_accu_V_0_0_i_i_fu_2520_p3) + $signed(tmp_116_0_cast_i_i_fu_2534_p1));

assign tmp154_cast_fu_2544_p1 = $signed(tmp154_reg_3788);

assign tmp154_fu_1637_p2 = ($signed(tmp_116_0_1_cast_i_i_fu_1616_p1) + $signed(tmp_116_0_2_cast_i_i_fu_1633_p1));

assign tmp156_fu_2564_p2 = ($signed(p_accu_V_0_1_i_i_fu_2513_p3) + $signed(tmp_116_1_cast_i_i_fu_2560_p1));

assign tmp157_cast_fu_2570_p1 = $signed(tmp157_reg_3798);

assign tmp157_fu_1684_p2 = ($signed(tmp_116_1_1_cast_i_i_fu_1663_p1) + $signed(tmp_116_1_2_cast_i_i_fu_1680_p1));

assign tmp159_fu_2590_p2 = ($signed(p_accu_V_0_2_i_i_fu_2506_p3) + $signed(tmp_116_2_cast_i_i_fu_2586_p1));

assign tmp160_cast_fu_2596_p1 = $signed(tmp160_reg_3808);

assign tmp160_fu_1731_p2 = ($signed(tmp_116_2_1_cast_i_i_fu_1710_p1) + $signed(tmp_116_2_2_cast_i_i_fu_1727_p1));

assign tmp162_fu_2616_p2 = ($signed(p_accu_V_0_3_i_i_fu_2499_p3) + $signed(tmp_116_3_cast_i_i_fu_2612_p1));

assign tmp163_cast_fu_2622_p1 = $signed(tmp163_reg_3818);

assign tmp163_fu_1778_p2 = ($signed(tmp_116_3_1_cast_i_i_fu_1757_p1) + $signed(tmp_116_3_2_cast_i_i_fu_1774_p1));

assign tmp165_fu_2642_p2 = ($signed(p_accu_V_0_4_i_i_fu_2492_p3) + $signed(tmp_116_4_cast_i_i_fu_2638_p1));

assign tmp166_cast_fu_2648_p1 = $signed(tmp166_reg_3828);

assign tmp166_fu_1825_p2 = ($signed(tmp_116_4_1_cast_i_i_fu_1804_p1) + $signed(tmp_116_4_2_cast_i_i_fu_1821_p1));

assign tmp168_fu_2668_p2 = ($signed(p_accu_V_0_5_i_i_fu_2485_p3) + $signed(tmp_116_5_cast_i_i_fu_2664_p1));

assign tmp169_cast_fu_2674_p1 = $signed(tmp169_reg_3838);

assign tmp169_fu_1872_p2 = ($signed(tmp_116_5_1_cast_i_i_fu_1851_p1) + $signed(tmp_116_5_2_cast_i_i_fu_1868_p1));

assign tmp171_fu_2694_p2 = ($signed(p_accu_V_0_6_i_i_fu_2478_p3) + $signed(tmp_116_6_cast_i_i_fu_2690_p1));

assign tmp172_cast_fu_2700_p1 = $signed(tmp172_reg_3848);

assign tmp172_fu_1919_p2 = ($signed(tmp_116_6_1_cast_i_i_fu_1898_p1) + $signed(tmp_116_6_2_cast_i_i_fu_1915_p1));

assign tmp174_fu_2720_p2 = ($signed(p_accu_V_0_7_i_i_fu_2471_p3) + $signed(tmp_116_7_cast_i_i_fu_2716_p1));

assign tmp175_cast_fu_2726_p1 = $signed(tmp175_reg_3858);

assign tmp175_fu_1966_p2 = ($signed(tmp_116_7_1_cast_i_i_fu_1945_p1) + $signed(tmp_116_7_2_cast_i_i_fu_1962_p1));

assign tmp177_fu_2746_p2 = ($signed(p_accu_V_0_8_i_i_fu_2464_p3) + $signed(tmp_116_8_cast_i_i_fu_2742_p1));

assign tmp178_cast_fu_2752_p1 = $signed(tmp178_reg_3868);

assign tmp178_fu_2013_p2 = ($signed(tmp_116_8_1_cast_i_i_fu_1992_p1) + $signed(tmp_116_8_2_cast_i_i_fu_2009_p1));

assign tmp180_fu_2772_p2 = ($signed(p_accu_V_0_9_i_i_fu_2457_p3) + $signed(tmp_116_9_cast_i_i_fu_2768_p1));

assign tmp181_cast_fu_2778_p1 = $signed(tmp181_reg_3878);

assign tmp181_fu_2060_p2 = ($signed(tmp_116_9_1_cast_i_i_fu_2039_p1) + $signed(tmp_116_9_2_cast_i_i_fu_2056_p1));

assign tmp183_fu_2798_p2 = ($signed(p_accu_V_0_10_i_i_fu_2450_p3) + $signed(tmp_116_10_cast_i_i_fu_2794_p1));

assign tmp184_cast_fu_2804_p1 = $signed(tmp184_reg_3888);

assign tmp184_fu_2107_p2 = ($signed(tmp_116_10_1_cast_i_s_fu_2086_p1) + $signed(tmp_116_10_2_cast_i_s_fu_2103_p1));

assign tmp186_fu_2824_p2 = ($signed(p_accu_V_0_11_i_i_fu_2443_p3) + $signed(tmp_116_11_cast_i_i_fu_2820_p1));

assign tmp187_cast_fu_2830_p1 = $signed(tmp187_reg_3898);

assign tmp187_fu_2154_p2 = ($signed(tmp_116_11_1_cast_i_s_fu_2133_p1) + $signed(tmp_116_11_2_cast_i_s_fu_2150_p1));

assign tmp189_fu_2850_p2 = ($signed(p_accu_V_0_12_i_i_fu_2436_p3) + $signed(tmp_116_12_cast_i_i_fu_2846_p1));

assign tmp190_cast_fu_2856_p1 = $signed(tmp190_reg_3908);

assign tmp190_fu_2201_p2 = ($signed(tmp_116_12_1_cast_i_s_fu_2180_p1) + $signed(tmp_116_12_2_cast_i_s_fu_2197_p1));

assign tmp192_fu_2876_p2 = ($signed(p_accu_V_0_13_i_i_fu_2429_p3) + $signed(tmp_116_13_cast_i_i_fu_2872_p1));

assign tmp193_cast_fu_2882_p1 = $signed(tmp193_reg_3918);

assign tmp193_fu_2248_p2 = ($signed(tmp_116_13_1_cast_i_s_fu_2227_p1) + $signed(tmp_116_13_2_cast_i_s_fu_2244_p1));

assign tmp195_fu_2902_p2 = ($signed(p_accu_V_0_14_i_i_fu_2422_p3) + $signed(tmp_116_14_cast_i_i_fu_2898_p1));

assign tmp196_cast_fu_2908_p1 = $signed(tmp196_reg_3928);

assign tmp196_fu_2295_p2 = ($signed(tmp_116_14_1_cast_i_s_fu_2274_p1) + $signed(tmp_116_14_2_cast_i_s_fu_2291_p1));

assign tmp198_fu_2928_p2 = ($signed(p_accu_V_0_15_i_i_fu_2415_p3) + $signed(tmp_116_15_cast_i_i_fu_2924_p1));

assign tmp199_cast_fu_2934_p1 = $signed(tmp199_reg_3938);

assign tmp199_fu_2342_p2 = ($signed(tmp_116_15_1_cast_i_s_fu_2321_p1) + $signed(tmp_116_15_2_cast_i_s_fu_2338_p1));

assign tmp_103_i_i_fu_1180_p1 = tile_assign_fu_216;

assign tmp_110_i_i_fu_2348_p1 = nf_assign_load_reg_3358_pp0_iter2_reg;

assign tmp_112_0_1_i_i_fu_1249_p1 = $signed(arg_V_read_assign_1_fu_1239_p4);

assign tmp_112_0_2_i_i_fu_1277_p1 = $signed(arg_V_read_assign_2_fu_1267_p4);

assign tmp_112_0_i_i_fu_1587_p1 = $signed(tmp_1269_reg_3463);

assign tmp_116_0_1_cast_i_i_fu_1616_p1 = $signed(tmp_116_0_1_i_i_fu_1608_p3);

assign tmp_116_0_1_i_i_fu_1608_p3 = {{p_Val2_7_0_1_i_i_fu_1603_p3}, {1'd0}};

assign tmp_116_0_2_cast_i_i_fu_1633_p1 = $signed(tmp_116_0_2_i_i_fu_1625_p3);

assign tmp_116_0_2_i_i_fu_1625_p3 = {{p_Val2_7_0_2_i_i_fu_1620_p3}, {1'd0}};

assign tmp_116_0_cast_i_i_fu_2534_p1 = $signed(tmp_116_0_i_i_fu_2527_p3);

assign tmp_116_0_i_i_fu_2527_p3 = {{p_Val2_7_0_i_i_reg_3783}, {1'd0}};

assign tmp_116_10_1_cast_i_s_fu_2086_p1 = $signed(tmp_116_10_1_i_i_fu_2078_p3);

assign tmp_116_10_1_i_i_fu_2078_p3 = {{p_Val2_7_10_1_i_i_fu_2073_p3}, {1'd0}};

assign tmp_116_10_2_cast_i_s_fu_2103_p1 = $signed(tmp_116_10_2_i_i_fu_2095_p3);

assign tmp_116_10_2_i_i_fu_2095_p3 = {{p_Val2_7_10_2_i_i_fu_2090_p3}, {1'd0}};

assign tmp_116_10_cast_i_i_fu_2794_p1 = $signed(tmp_116_10_i_i_fu_2787_p3);

assign tmp_116_10_i_i_fu_2787_p3 = {{p_Val2_7_10_i_i_reg_3883}, {1'd0}};

assign tmp_116_11_1_cast_i_s_fu_2133_p1 = $signed(tmp_116_11_1_i_i_fu_2125_p3);

assign tmp_116_11_1_i_i_fu_2125_p3 = {{p_Val2_7_11_1_i_i_fu_2120_p3}, {1'd0}};

assign tmp_116_11_2_cast_i_s_fu_2150_p1 = $signed(tmp_116_11_2_i_i_fu_2142_p3);

assign tmp_116_11_2_i_i_fu_2142_p3 = {{p_Val2_7_11_2_i_i_fu_2137_p3}, {1'd0}};

assign tmp_116_11_cast_i_i_fu_2820_p1 = $signed(tmp_116_11_i_i_fu_2813_p3);

assign tmp_116_11_i_i_fu_2813_p3 = {{p_Val2_7_11_i_i_reg_3893}, {1'd0}};

assign tmp_116_12_1_cast_i_s_fu_2180_p1 = $signed(tmp_116_12_1_i_i_fu_2172_p3);

assign tmp_116_12_1_i_i_fu_2172_p3 = {{p_Val2_7_12_1_i_i_fu_2167_p3}, {1'd0}};

assign tmp_116_12_2_cast_i_s_fu_2197_p1 = $signed(tmp_116_12_2_i_i_fu_2189_p3);

assign tmp_116_12_2_i_i_fu_2189_p3 = {{p_Val2_7_12_2_i_i_fu_2184_p3}, {1'd0}};

assign tmp_116_12_cast_i_i_fu_2846_p1 = $signed(tmp_116_12_i_i_fu_2839_p3);

assign tmp_116_12_i_i_fu_2839_p3 = {{p_Val2_7_12_i_i_reg_3903}, {1'd0}};

assign tmp_116_13_1_cast_i_s_fu_2227_p1 = $signed(tmp_116_13_1_i_i_fu_2219_p3);

assign tmp_116_13_1_i_i_fu_2219_p3 = {{p_Val2_7_13_1_i_i_fu_2214_p3}, {1'd0}};

assign tmp_116_13_2_cast_i_s_fu_2244_p1 = $signed(tmp_116_13_2_i_i_fu_2236_p3);

assign tmp_116_13_2_i_i_fu_2236_p3 = {{p_Val2_7_13_2_i_i_fu_2231_p3}, {1'd0}};

assign tmp_116_13_cast_i_i_fu_2872_p1 = $signed(tmp_116_13_i_i_fu_2865_p3);

assign tmp_116_13_i_i_fu_2865_p3 = {{p_Val2_7_13_i_i_reg_3913}, {1'd0}};

assign tmp_116_14_1_cast_i_s_fu_2274_p1 = $signed(tmp_116_14_1_i_i_fu_2266_p3);

assign tmp_116_14_1_i_i_fu_2266_p3 = {{p_Val2_7_14_1_i_i_fu_2261_p3}, {1'd0}};

assign tmp_116_14_2_cast_i_s_fu_2291_p1 = $signed(tmp_116_14_2_i_i_fu_2283_p3);

assign tmp_116_14_2_i_i_fu_2283_p3 = {{p_Val2_7_14_2_i_i_fu_2278_p3}, {1'd0}};

assign tmp_116_14_cast_i_i_fu_2898_p1 = $signed(tmp_116_14_i_i_fu_2891_p3);

assign tmp_116_14_i_i_fu_2891_p3 = {{p_Val2_7_14_i_i_reg_3923}, {1'd0}};

assign tmp_116_15_1_cast_i_s_fu_2321_p1 = $signed(tmp_116_15_1_i_i_fu_2313_p3);

assign tmp_116_15_1_i_i_fu_2313_p3 = {{p_Val2_7_15_1_i_i_fu_2308_p3}, {1'd0}};

assign tmp_116_15_2_cast_i_s_fu_2338_p1 = $signed(tmp_116_15_2_i_i_fu_2330_p3);

assign tmp_116_15_2_i_i_fu_2330_p3 = {{p_Val2_7_15_2_i_i_fu_2325_p3}, {1'd0}};

assign tmp_116_15_cast_i_i_fu_2924_p1 = $signed(tmp_116_15_i_i_fu_2917_p3);

assign tmp_116_15_i_i_fu_2917_p3 = {{p_Val2_7_15_i_i_reg_3933}, {1'd0}};

assign tmp_116_1_1_cast_i_i_fu_1663_p1 = $signed(tmp_116_1_1_i_i_fu_1655_p3);

assign tmp_116_1_1_i_i_fu_1655_p3 = {{p_Val2_7_1_1_i_i_fu_1650_p3}, {1'd0}};

assign tmp_116_1_2_cast_i_i_fu_1680_p1 = $signed(tmp_116_1_2_i_i_fu_1672_p3);

assign tmp_116_1_2_i_i_fu_1672_p3 = {{p_Val2_7_1_2_i_i_fu_1667_p3}, {1'd0}};

assign tmp_116_1_cast_i_i_fu_2560_p1 = $signed(tmp_116_1_i_i_fu_2553_p3);

assign tmp_116_1_i_i_fu_2553_p3 = {{p_Val2_7_1_i_i_reg_3793}, {1'd0}};

assign tmp_116_2_1_cast_i_i_fu_1710_p1 = $signed(tmp_116_2_1_i_i_fu_1702_p3);

assign tmp_116_2_1_i_i_fu_1702_p3 = {{p_Val2_7_2_1_i_i_fu_1697_p3}, {1'd0}};

assign tmp_116_2_2_cast_i_i_fu_1727_p1 = $signed(tmp_116_2_2_i_i_fu_1719_p3);

assign tmp_116_2_2_i_i_fu_1719_p3 = {{p_Val2_7_2_2_i_i_fu_1714_p3}, {1'd0}};

assign tmp_116_2_cast_i_i_fu_2586_p1 = $signed(tmp_116_2_i_i_fu_2579_p3);

assign tmp_116_2_i_i_fu_2579_p3 = {{p_Val2_7_2_i_i_reg_3803}, {1'd0}};

assign tmp_116_3_1_cast_i_i_fu_1757_p1 = $signed(tmp_116_3_1_i_i_fu_1749_p3);

assign tmp_116_3_1_i_i_fu_1749_p3 = {{p_Val2_7_3_1_i_i_fu_1744_p3}, {1'd0}};

assign tmp_116_3_2_cast_i_i_fu_1774_p1 = $signed(tmp_116_3_2_i_i_fu_1766_p3);

assign tmp_116_3_2_i_i_fu_1766_p3 = {{p_Val2_7_3_2_i_i_fu_1761_p3}, {1'd0}};

assign tmp_116_3_cast_i_i_fu_2612_p1 = $signed(tmp_116_3_i_i_fu_2605_p3);

assign tmp_116_3_i_i_fu_2605_p3 = {{p_Val2_7_3_i_i_reg_3813}, {1'd0}};

assign tmp_116_4_1_cast_i_i_fu_1804_p1 = $signed(tmp_116_4_1_i_i_fu_1796_p3);

assign tmp_116_4_1_i_i_fu_1796_p3 = {{p_Val2_7_4_1_i_i_fu_1791_p3}, {1'd0}};

assign tmp_116_4_2_cast_i_i_fu_1821_p1 = $signed(tmp_116_4_2_i_i_fu_1813_p3);

assign tmp_116_4_2_i_i_fu_1813_p3 = {{p_Val2_7_4_2_i_i_fu_1808_p3}, {1'd0}};

assign tmp_116_4_cast_i_i_fu_2638_p1 = $signed(tmp_116_4_i_i_fu_2631_p3);

assign tmp_116_4_i_i_fu_2631_p3 = {{p_Val2_7_4_i_i_reg_3823}, {1'd0}};

assign tmp_116_5_1_cast_i_i_fu_1851_p1 = $signed(tmp_116_5_1_i_i_fu_1843_p3);

assign tmp_116_5_1_i_i_fu_1843_p3 = {{p_Val2_7_5_1_i_i_fu_1838_p3}, {1'd0}};

assign tmp_116_5_2_cast_i_i_fu_1868_p1 = $signed(tmp_116_5_2_i_i_fu_1860_p3);

assign tmp_116_5_2_i_i_fu_1860_p3 = {{p_Val2_7_5_2_i_i_fu_1855_p3}, {1'd0}};

assign tmp_116_5_cast_i_i_fu_2664_p1 = $signed(tmp_116_5_i_i_fu_2657_p3);

assign tmp_116_5_i_i_fu_2657_p3 = {{p_Val2_7_5_i_i_reg_3833}, {1'd0}};

assign tmp_116_6_1_cast_i_i_fu_1898_p1 = $signed(tmp_116_6_1_i_i_fu_1890_p3);

assign tmp_116_6_1_i_i_fu_1890_p3 = {{p_Val2_7_6_1_i_i_fu_1885_p3}, {1'd0}};

assign tmp_116_6_2_cast_i_i_fu_1915_p1 = $signed(tmp_116_6_2_i_i_fu_1907_p3);

assign tmp_116_6_2_i_i_fu_1907_p3 = {{p_Val2_7_6_2_i_i_fu_1902_p3}, {1'd0}};

assign tmp_116_6_cast_i_i_fu_2690_p1 = $signed(tmp_116_6_i_i_fu_2683_p3);

assign tmp_116_6_i_i_fu_2683_p3 = {{p_Val2_7_6_i_i_reg_3843}, {1'd0}};

assign tmp_116_7_1_cast_i_i_fu_1945_p1 = $signed(tmp_116_7_1_i_i_fu_1937_p3);

assign tmp_116_7_1_i_i_fu_1937_p3 = {{p_Val2_7_7_1_i_i_fu_1932_p3}, {1'd0}};

assign tmp_116_7_2_cast_i_i_fu_1962_p1 = $signed(tmp_116_7_2_i_i_fu_1954_p3);

assign tmp_116_7_2_i_i_fu_1954_p3 = {{p_Val2_7_7_2_i_i_fu_1949_p3}, {1'd0}};

assign tmp_116_7_cast_i_i_fu_2716_p1 = $signed(tmp_116_7_i_i_fu_2709_p3);

assign tmp_116_7_i_i_fu_2709_p3 = {{p_Val2_7_7_i_i_reg_3853}, {1'd0}};

assign tmp_116_8_1_cast_i_i_fu_1992_p1 = $signed(tmp_116_8_1_i_i_fu_1984_p3);

assign tmp_116_8_1_i_i_fu_1984_p3 = {{p_Val2_7_8_1_i_i_fu_1979_p3}, {1'd0}};

assign tmp_116_8_2_cast_i_i_fu_2009_p1 = $signed(tmp_116_8_2_i_i_fu_2001_p3);

assign tmp_116_8_2_i_i_fu_2001_p3 = {{p_Val2_7_8_2_i_i_fu_1996_p3}, {1'd0}};

assign tmp_116_8_cast_i_i_fu_2742_p1 = $signed(tmp_116_8_i_i_fu_2735_p3);

assign tmp_116_8_i_i_fu_2735_p3 = {{p_Val2_7_8_i_i_reg_3863}, {1'd0}};

assign tmp_116_9_1_cast_i_i_fu_2039_p1 = $signed(tmp_116_9_1_i_i_fu_2031_p3);

assign tmp_116_9_1_i_i_fu_2031_p3 = {{p_Val2_7_9_1_i_i_fu_2026_p3}, {1'd0}};

assign tmp_116_9_2_cast_i_i_fu_2056_p1 = $signed(tmp_116_9_2_i_i_fu_2048_p3);

assign tmp_116_9_2_i_i_fu_2048_p3 = {{p_Val2_7_9_2_i_i_fu_2043_p3}, {1'd0}};

assign tmp_116_9_cast_i_i_fu_2768_p1 = $signed(tmp_116_9_i_i_fu_2761_p3);

assign tmp_116_9_i_i_fu_2761_p3 = {{p_Val2_7_9_i_i_reg_3873}, {1'd0}};

assign tmp_1265_fu_739_p2 = tmp_loc_read_reg_3282 << 32'd2;

assign tmp_1266_fu_777_p1 = sf_5_fu_220[3:0];

assign tmp_1267_fu_773_p1 = sf_5_fu_220[3:0];

assign tmp_1268_fu_1223_p1 = weights0_m_weights_V_q0[0:0];

assign tmp_1269_fu_1227_p1 = ap_phi_reg_pp0_iter2_act_m_val_V_reg_710[7:0];

assign tmp_1272_fu_1287_p1 = weights0_m_weights_V_1_q0[0:0];

assign tmp_1275_fu_1307_p1 = weights0_m_weights_V_2_q0[0:0];

assign tmp_1278_fu_1327_p1 = weights0_m_weights_V_3_q0[0:0];

assign tmp_1281_fu_1347_p1 = weights0_m_weights_V_4_q0[0:0];

assign tmp_1284_fu_1367_p1 = weights0_m_weights_V_5_q0[0:0];

assign tmp_1287_fu_1387_p1 = weights0_m_weights_V_6_q0[0:0];

assign tmp_1290_fu_1407_p1 = weights0_m_weights_V_7_q0[0:0];

assign tmp_1293_fu_1427_p1 = weights0_m_weights_V_8_q0[0:0];

assign tmp_1296_fu_1447_p1 = weights0_m_weights_V_9_q0[0:0];

assign tmp_1299_fu_1467_p1 = weights0_m_weights_V_10_q0[0:0];

assign tmp_1302_fu_1487_p1 = weights0_m_weights_V_11_q0[0:0];

assign tmp_1305_fu_1507_p1 = weights0_m_weights_V_12_q0[0:0];

assign tmp_1308_fu_1527_p1 = weights0_m_weights_V_13_q0[0:0];

assign tmp_1311_fu_1547_p1 = weights0_m_weights_V_14_q0[0:0];

assign tmp_1314_fu_1567_p1 = weights0_m_weights_V_15_q0[0:0];

assign tmp_31_i_i_fu_796_p2 = ((sf_5_fu_220 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_32_i_i_fu_808_p2 = ((sf_fu_802_p2 == 32'd9) ? 1'b1 : 1'b0);

assign tmp_33_i_i_fu_828_p2 = ((nf_fu_822_p2 == 32'd4) ? 1'b1 : 1'b0);

assign tmp_fu_734_p2 = tmp_loc_read_reg_3282 << 32'd5;

assign tmp_i1215_i_i_fu_3027_p2 = (($signed(threshs0_m_threshold_19_reg_4108) < $signed(accu_0_1_V_reg_4028)) ? 1'b1 : 1'b0);

assign tmp_i1216_i_i_fu_3031_p2 = (($signed(threshs0_m_threshold_21_reg_4113) < $signed(accu_0_2_V_reg_4033)) ? 1'b1 : 1'b0);

assign tmp_i1217_i_i_fu_3035_p2 = (($signed(threshs0_m_threshold_23_reg_4118) < $signed(accu_0_3_V_reg_4038)) ? 1'b1 : 1'b0);

assign tmp_i1218_i_i_fu_3039_p2 = (($signed(threshs0_m_threshold_25_reg_4123) < $signed(accu_0_4_V_reg_4043)) ? 1'b1 : 1'b0);

assign tmp_i1219_i_i_fu_3043_p2 = (($signed(threshs0_m_threshold_27_reg_4128) < $signed(accu_0_5_V_reg_4048)) ? 1'b1 : 1'b0);

assign tmp_i1220_i_i_fu_3047_p2 = (($signed(threshs0_m_threshold_29_reg_4133) < $signed(accu_0_6_V_reg_4053)) ? 1'b1 : 1'b0);

assign tmp_i1221_i_i_fu_3051_p2 = (($signed(threshs0_m_threshold_31_reg_4138) < $signed(accu_0_7_V_reg_4058)) ? 1'b1 : 1'b0);

assign tmp_i1222_i_i_fu_3055_p2 = (($signed(threshs0_m_threshold_33_reg_4143) < $signed(accu_0_8_V_reg_4063)) ? 1'b1 : 1'b0);

assign tmp_i1223_i_i_fu_3059_p2 = (($signed(threshs0_m_threshold_35_reg_4148) < $signed(accu_0_9_V_reg_4068)) ? 1'b1 : 1'b0);

assign tmp_i1224_i_i_fu_3063_p2 = (($signed(threshs0_m_threshold_37_reg_4153) < $signed(accu_0_10_V_reg_4073)) ? 1'b1 : 1'b0);

assign tmp_i1225_i_i_fu_3067_p2 = (($signed(threshs0_m_threshold_39_reg_4158) < $signed(accu_0_11_V_reg_4078)) ? 1'b1 : 1'b0);

assign tmp_i1226_i_i_fu_3071_p2 = (($signed(threshs0_m_threshold_41_reg_4163) < $signed(accu_0_12_V_reg_4083)) ? 1'b1 : 1'b0);

assign tmp_i1227_i_i_fu_3075_p2 = (($signed(threshs0_m_threshold_43_reg_4168) < $signed(accu_0_13_V_reg_4088)) ? 1'b1 : 1'b0);

assign tmp_i1228_i_i_fu_3079_p2 = (($signed(threshs0_m_threshold_45_reg_4173) < $signed(accu_0_14_V_reg_4093)) ? 1'b1 : 1'b0);

assign tmp_i1229_i_i_fu_3083_p2 = (($signed(threshs0_m_threshold_47_reg_4178) < $signed(accu_0_15_V_reg_4098)) ? 1'b1 : 1'b0);

assign tmp_i_i_1069_fu_764_p2 = ((nf_assign_fu_224 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_i_i_fu_744_p2 = (tmp_fu_734_p2 + tmp_1265_fu_739_p2);

assign tmp_i_i_i_fu_3023_p2 = (($signed(threshs0_m_threshold_17_reg_4103) < $signed(accu_0_0_V_reg_4023)) ? 1'b1 : 1'b0);

assign weights0_m_weights_V_10_address0 = tmp_103_i_i_fu_1180_p1;

assign weights0_m_weights_V_11_address0 = tmp_103_i_i_fu_1180_p1;

assign weights0_m_weights_V_12_address0 = tmp_103_i_i_fu_1180_p1;

assign weights0_m_weights_V_13_address0 = tmp_103_i_i_fu_1180_p1;

assign weights0_m_weights_V_14_address0 = tmp_103_i_i_fu_1180_p1;

assign weights0_m_weights_V_15_address0 = tmp_103_i_i_fu_1180_p1;

assign weights0_m_weights_V_1_address0 = tmp_103_i_i_fu_1180_p1;

assign weights0_m_weights_V_2_address0 = tmp_103_i_i_fu_1180_p1;

assign weights0_m_weights_V_3_address0 = tmp_103_i_i_fu_1180_p1;

assign weights0_m_weights_V_4_address0 = tmp_103_i_i_fu_1180_p1;

assign weights0_m_weights_V_5_address0 = tmp_103_i_i_fu_1180_p1;

assign weights0_m_weights_V_6_address0 = tmp_103_i_i_fu_1180_p1;

assign weights0_m_weights_V_7_address0 = tmp_103_i_i_fu_1180_p1;

assign weights0_m_weights_V_8_address0 = tmp_103_i_i_fu_1180_p1;

assign weights0_m_weights_V_9_address0 = tmp_103_i_i_fu_1180_p1;

assign weights0_m_weights_V_address0 = tmp_103_i_i_fu_1180_p1;

always @ (posedge ap_clk) begin
    tmp_i_i_reg_3288[1:0] <= 2'b00;
    tmp154_reg_3788[0] <= 1'b0;
    tmp157_reg_3798[0] <= 1'b0;
    tmp160_reg_3808[0] <= 1'b0;
    tmp163_reg_3818[0] <= 1'b0;
    tmp166_reg_3828[0] <= 1'b0;
    tmp169_reg_3838[0] <= 1'b0;
    tmp172_reg_3848[0] <= 1'b0;
    tmp175_reg_3858[0] <= 1'b0;
    tmp178_reg_3868[0] <= 1'b0;
    tmp181_reg_3878[0] <= 1'b0;
    tmp184_reg_3888[0] <= 1'b0;
    tmp187_reg_3898[0] <= 1'b0;
    tmp190_reg_3908[0] <= 1'b0;
    tmp193_reg_3918[0] <= 1'b0;
    tmp196_reg_3928[0] <= 1'b0;
    tmp199_reg_3938[0] <= 1'b0;
end

endmodule //Matrix_Vector_Activa_4
