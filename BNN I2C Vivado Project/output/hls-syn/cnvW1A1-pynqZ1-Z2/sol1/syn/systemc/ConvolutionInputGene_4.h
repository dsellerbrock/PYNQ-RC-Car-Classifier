// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _ConvolutionInputGene_4_HH_
#define _ConvolutionInputGene_4_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "BlackBoxJam_mux_4pcA.h"
#include "ConvolutionInputGFfa.h"

namespace ap_rtl {

struct ConvolutionInputGene_4 : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > in_V_V_dout;
    sc_in< sc_logic > in_V_V_empty_n;
    sc_out< sc_logic > in_V_V_read;
    sc_out< sc_lv<32> > out_V_V_din;
    sc_in< sc_logic > out_V_V_full_n;
    sc_out< sc_logic > out_V_V_write;
    sc_in< sc_lv<32> > numReps_dout;
    sc_in< sc_logic > numReps_empty_n;
    sc_out< sc_logic > numReps_read;
    sc_out< sc_lv<32> > numReps_out_din;
    sc_in< sc_logic > numReps_out_full_n;
    sc_out< sc_logic > numReps_out_write;


    // Module declarations
    ConvolutionInputGene_4(sc_module_name name);
    SC_HAS_PROCESS(ConvolutionInputGene_4);

    ~ConvolutionInputGene_4();

    sc_trace_file* mVcdFile;

    ConvolutionInputGFfa* inputBuf_0_V_U;
    ConvolutionInputGFfa* inputBuf_1_V_U;
    ConvolutionInputGFfa* inputBuf_2_V_U;
    ConvolutionInputGFfa* inputBuf_3_V_U;
    BlackBoxJam_mux_4pcA<1,1,32,32,32,32,2,32>* BlackBoxJam_mux_4pcA_U311;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > in_V_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > tmp_i_2857_reg_995;
    sc_signal< sc_lv<1> > or_cond_i_reg_1034;
    sc_signal< sc_logic > out_V_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_lv<1> > tmp_i_2857_reg_995_pp0_iter4_reg;
    sc_signal< sc_lv<1> > tmp_147_i_reg_999;
    sc_signal< sc_lv<1> > tmp_147_i_reg_999_pp0_iter4_reg;
    sc_signal< sc_logic > numReps_blk_n;
    sc_signal< sc_logic > numReps_out_blk_n;
    sc_signal< sc_lv<41> > indvar_flatten_reg_289;
    sc_signal< sc_lv<9> > i_i_reg_300;
    sc_signal< sc_lv<32> > reg_378;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_predicate_op159_read_state5;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter4;
    sc_signal< bool > ap_predicate_op223_write_state8;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter5;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > tmp_i_2857_fu_483_p2;
    sc_signal< sc_lv<1> > or_cond_i_fu_655_p2;
    sc_signal< sc_lv<32> > reg_382;
    sc_signal< sc_lv<32> > numReps_read_reg_965;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<41> > bound_fu_428_p2;
    sc_signal< sc_lv<41> > bound_reg_971;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_434_p2;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_976;
    sc_signal< sc_lv<41> > indvar_flatten_next_fu_439_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > tmp_i_fu_445_p2;
    sc_signal< sc_lv<1> > tmp_i_reg_985;
    sc_signal< sc_lv<9> > i_fu_457_p3;
    sc_signal< sc_lv<1> > tmp_i_2857_reg_995_pp0_iter2_reg;
    sc_signal< sc_lv<1> > tmp_i_2857_reg_995_pp0_iter3_reg;
    sc_signal< sc_lv<1> > tmp_147_i_fu_492_p2;
    sc_signal< sc_lv<1> > tmp_147_i_reg_999_pp0_iter2_reg;
    sc_signal< sc_lv<1> > tmp_147_i_reg_999_pp0_iter3_reg;
    sc_signal< sc_lv<32> > count_simd_2_load_reg_1003;
    sc_signal< sc_lv<2> > tmp_2985_fu_510_p1;
    sc_signal< sc_lv<2> > tmp_2985_reg_1008;
    sc_signal< sc_lv<30> > tmp_148_i_fu_528_p2;
    sc_signal< sc_lv<30> > tmp_148_i_reg_1013;
    sc_signal< sc_lv<1> > tmp_152_i_fu_540_p2;
    sc_signal< sc_lv<1> > tmp_154_i_fu_557_p2;
    sc_signal< sc_lv<1> > tmp_156_i_fu_568_p2;
    sc_signal< sc_lv<1> > tmp_157_i_fu_588_p2;
    sc_signal< sc_lv<1> > or_cond_i_reg_1034_pp0_iter2_reg;
    sc_signal< sc_lv<1> > tmp_162_i_fu_360_p2;
    sc_signal< sc_lv<1> > tmp_162_i_reg_1038;
    sc_signal< sc_lv<1> > tmp_153_i_fu_366_p2;
    sc_signal< sc_lv<1> > tmp_153_i_reg_1043;
    sc_signal< sc_lv<32> > current_line_in_bloc_fu_763_p2;
    sc_signal< sc_lv<32> > current_line_in_bloc_reg_1047;
    sc_signal< sc_lv<2> > current_block_read_fu_774_p2;
    sc_signal< sc_lv<2> > current_block_read_reg_1052;
    sc_signal< sc_lv<2> > current_block_read_reg_1052_pp0_iter3_reg;
    sc_signal< sc_lv<2> > tmp_2989_fu_787_p1;
    sc_signal< sc_lv<2> > tmp_2989_reg_1057;
    sc_signal< sc_lv<5> > inputBuf_0_V_addr_4_reg_1061;
    sc_signal< sc_lv<5> > inputBuf_1_V_addr_4_reg_1066;
    sc_signal< sc_lv<5> > inputBuf_2_V_addr_4_reg_1071;
    sc_signal< sc_lv<5> > inputBuf_3_V_addr_4_reg_1076;
    sc_signal< sc_lv<2> > tmp_2984_fu_834_p1;
    sc_signal< sc_lv<2> > tmp_2984_reg_1081;
    sc_signal< sc_lv<5> > inputBuf_0_V_addr_reg_1085;
    sc_signal< sc_lv<5> > inputBuf_1_V_addr_reg_1090;
    sc_signal< sc_lv<5> > inputBuf_2_V_addr_reg_1095;
    sc_signal< sc_lv<5> > inputBuf_3_V_addr_reg_1100;
    sc_signal< sc_lv<32> > outElem_V_fu_870_p6;
    sc_signal< sc_lv<32> > outElem_V_reg_1125;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_lv<5> > inputBuf_0_V_address0;
    sc_signal< sc_logic > inputBuf_0_V_ce0;
    sc_signal< sc_lv<32> > inputBuf_0_V_q0;
    sc_signal< sc_lv<5> > inputBuf_0_V_address1;
    sc_signal< sc_logic > inputBuf_0_V_ce1;
    sc_signal< sc_logic > inputBuf_0_V_we1;
    sc_signal< sc_lv<5> > inputBuf_1_V_address0;
    sc_signal< sc_logic > inputBuf_1_V_ce0;
    sc_signal< sc_lv<32> > inputBuf_1_V_q0;
    sc_signal< sc_lv<5> > inputBuf_1_V_address1;
    sc_signal< sc_logic > inputBuf_1_V_ce1;
    sc_signal< sc_logic > inputBuf_1_V_we1;
    sc_signal< sc_lv<5> > inputBuf_2_V_address0;
    sc_signal< sc_logic > inputBuf_2_V_ce0;
    sc_signal< sc_lv<32> > inputBuf_2_V_q0;
    sc_signal< sc_lv<5> > inputBuf_2_V_address1;
    sc_signal< sc_logic > inputBuf_2_V_ce1;
    sc_signal< sc_logic > inputBuf_2_V_we1;
    sc_signal< sc_lv<5> > inputBuf_3_V_address0;
    sc_signal< sc_logic > inputBuf_3_V_ce0;
    sc_signal< sc_lv<32> > inputBuf_3_V_q0;
    sc_signal< sc_lv<5> > inputBuf_3_V_address1;
    sc_signal< sc_logic > inputBuf_3_V_ce1;
    sc_signal< sc_logic > inputBuf_3_V_we1;
    sc_signal< sc_lv<64> > tmp_161_i_fu_779_p1;
    sc_signal< sc_lv<64> > tmp_146_i_fu_826_p1;
    sc_signal< sc_lv<64> > tmp_151_i_fu_863_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<32> > read_block_3_fu_94;
    sc_signal< sc_lv<32> > read_block_1_i_mid2_fu_471_p3;
    sc_signal< sc_lv<32> > read_block_3_cast_i_fu_683_p1;
    sc_signal< sc_lv<32> > read_block_fu_741_p2;
    sc_signal< sc_lv<32> > ofm_y_1_i_fu_98;
    sc_signal< sc_lv<32> > p_ofm_y_6_i_fu_622_p3;
    sc_signal< sc_lv<32> > ofm_x_2_fu_102;
    sc_signal< sc_lv<32> > ofm_x_fu_582_p2;
    sc_signal< sc_lv<32> > k_y_2_fu_106;
    sc_signal< sc_lv<32> > k_y_fu_514_p2;
    sc_signal< sc_lv<32> > inp_2_fu_110;
    sc_signal< sc_lv<32> > p_inp_1_i_fu_614_p3;
    sc_signal< sc_lv<32> > inp_fu_725_p2;
    sc_signal< sc_lv<32> > k_x_2_fu_114;
    sc_signal< sc_lv<32> > k_x_fu_551_p2;
    sc_signal< sc_lv<32> > count_simd_2_fu_118;
    sc_signal< sc_lv<32> > count_simd_fu_534_p2;
    sc_signal< sc_lv<32> > current_block_write_9_fu_122;
    sc_signal< sc_lv<32> > current_block_write_8_2854_fu_814_p3;
    sc_signal< sc_lv<32> > current_block_write_5_2851_fu_850_p3;
    sc_signal< sc_lv<32> > current_line_3_fu_126;
    sc_signal< sc_lv<32> > current_line_3_i_fu_667_p3;
    sc_signal< sc_lv<32> > grp_fu_354_p2;
    sc_signal< sc_lv<32> > counter_internal_blo_fu_130;
    sc_signal< sc_lv<32> > p_i_fu_712_p3;
    sc_signal< sc_lv<39> > tmp_s_fu_417_p3;
    sc_signal< sc_lv<41> > p_shl_fu_410_p3;
    sc_signal< sc_lv<41> > p_shl2_fu_424_p1;
    sc_signal< sc_lv<9> > i_i_op_fu_451_p2;
    sc_signal< sc_lv<30> > tmp_2988_fu_524_p1;
    sc_signal< sc_lv<30> > tmp_2987_fu_520_p1;
    sc_signal< sc_lv<32> > ofm_y_fu_602_p2;
    sc_signal< sc_lv<1> > tmp_158_i_fu_608_p2;
    sc_signal< sc_lv<1> > tmp_159_i_fu_643_p2;
    sc_signal< sc_lv<1> > tmp_160_i_fu_649_p2;
    sc_signal< sc_lv<3> > tmp_2983_fu_479_p1;
    sc_signal< sc_lv<3> > read_block_5_cast_fu_661_p2;
    sc_signal< sc_lv<3> > read_block_2_fu_675_p3;
    sc_signal< sc_lv<32> > counter_internal_blo_8_fu_700_p2;
    sc_signal< sc_lv<1> > tmp_164_i_fu_706_p2;
    sc_signal< sc_lv<32> > tmp_150_i_fu_756_p3;
    sc_signal< sc_lv<2> > tmp_2986_fu_752_p1;
    sc_signal< sc_lv<2> > tmp_fu_768_p2;
    sc_signal< sc_lv<32> > current_block_write_6_2852_fu_794_p2;
    sc_signal< sc_lv<1> > tmp_163_i_fu_800_p2;
    sc_signal< sc_lv<32> > current_block_write_7_2853_fu_806_p3;
    sc_signal< sc_lv<32> > current_block_write_fu_838_p2;
    sc_signal< sc_lv<1> > tmp_155_i_fu_844_p2;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_460;
    sc_signal< bool > ap_condition_472;
    sc_signal< bool > ap_condition_483;
    sc_signal< bool > ap_condition_494;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<41> ap_const_lv41_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<41> ap_const_lv41_1;
    static const sc_lv<9> ap_const_lv9_180;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<32> ap_const_lv32_3C;
    static const sc_lv<32> ap_const_lv32_6B;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<3> ap_const_lv3_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage0_iter2();
    void thread_ap_block_state6_pp0_stage0_iter3();
    void thread_ap_block_state7_pp0_stage0_iter4();
    void thread_ap_block_state8_pp0_stage0_iter5();
    void thread_ap_condition_460();
    void thread_ap_condition_472();
    void thread_ap_condition_483();
    void thread_ap_condition_494();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_predicate_op159_read_state5();
    void thread_ap_predicate_op223_write_state8();
    void thread_ap_ready();
    void thread_bound_fu_428_p2();
    void thread_count_simd_fu_534_p2();
    void thread_counter_internal_blo_8_fu_700_p2();
    void thread_current_block_read_fu_774_p2();
    void thread_current_block_write_5_2851_fu_850_p3();
    void thread_current_block_write_6_2852_fu_794_p2();
    void thread_current_block_write_7_2853_fu_806_p3();
    void thread_current_block_write_8_2854_fu_814_p3();
    void thread_current_block_write_fu_838_p2();
    void thread_current_line_3_i_fu_667_p3();
    void thread_current_line_in_bloc_fu_763_p2();
    void thread_exitcond_flatten_fu_434_p2();
    void thread_grp_fu_354_p2();
    void thread_i_fu_457_p3();
    void thread_i_i_op_fu_451_p2();
    void thread_in_V_V_blk_n();
    void thread_in_V_V_read();
    void thread_indvar_flatten_next_fu_439_p2();
    void thread_inp_fu_725_p2();
    void thread_inputBuf_0_V_address0();
    void thread_inputBuf_0_V_address1();
    void thread_inputBuf_0_V_ce0();
    void thread_inputBuf_0_V_ce1();
    void thread_inputBuf_0_V_we1();
    void thread_inputBuf_1_V_address0();
    void thread_inputBuf_1_V_address1();
    void thread_inputBuf_1_V_ce0();
    void thread_inputBuf_1_V_ce1();
    void thread_inputBuf_1_V_we1();
    void thread_inputBuf_2_V_address0();
    void thread_inputBuf_2_V_address1();
    void thread_inputBuf_2_V_ce0();
    void thread_inputBuf_2_V_ce1();
    void thread_inputBuf_2_V_we1();
    void thread_inputBuf_3_V_address0();
    void thread_inputBuf_3_V_address1();
    void thread_inputBuf_3_V_ce0();
    void thread_inputBuf_3_V_ce1();
    void thread_inputBuf_3_V_we1();
    void thread_k_x_fu_551_p2();
    void thread_k_y_fu_514_p2();
    void thread_numReps_blk_n();
    void thread_numReps_out_blk_n();
    void thread_numReps_out_din();
    void thread_numReps_out_write();
    void thread_numReps_read();
    void thread_ofm_x_fu_582_p2();
    void thread_ofm_y_fu_602_p2();
    void thread_or_cond_i_fu_655_p2();
    void thread_out_V_V_blk_n();
    void thread_out_V_V_din();
    void thread_out_V_V_write();
    void thread_p_i_fu_712_p3();
    void thread_p_inp_1_i_fu_614_p3();
    void thread_p_ofm_y_6_i_fu_622_p3();
    void thread_p_shl2_fu_424_p1();
    void thread_p_shl_fu_410_p3();
    void thread_read_block_1_i_mid2_fu_471_p3();
    void thread_read_block_2_fu_675_p3();
    void thread_read_block_3_cast_i_fu_683_p1();
    void thread_read_block_5_cast_fu_661_p2();
    void thread_read_block_fu_741_p2();
    void thread_tmp_146_i_fu_826_p1();
    void thread_tmp_147_i_fu_492_p2();
    void thread_tmp_148_i_fu_528_p2();
    void thread_tmp_150_i_fu_756_p3();
    void thread_tmp_151_i_fu_863_p1();
    void thread_tmp_152_i_fu_540_p2();
    void thread_tmp_153_i_fu_366_p2();
    void thread_tmp_154_i_fu_557_p2();
    void thread_tmp_155_i_fu_844_p2();
    void thread_tmp_156_i_fu_568_p2();
    void thread_tmp_157_i_fu_588_p2();
    void thread_tmp_158_i_fu_608_p2();
    void thread_tmp_159_i_fu_643_p2();
    void thread_tmp_160_i_fu_649_p2();
    void thread_tmp_161_i_fu_779_p1();
    void thread_tmp_162_i_fu_360_p2();
    void thread_tmp_163_i_fu_800_p2();
    void thread_tmp_164_i_fu_706_p2();
    void thread_tmp_2983_fu_479_p1();
    void thread_tmp_2984_fu_834_p1();
    void thread_tmp_2985_fu_510_p1();
    void thread_tmp_2986_fu_752_p1();
    void thread_tmp_2987_fu_520_p1();
    void thread_tmp_2988_fu_524_p1();
    void thread_tmp_2989_fu_787_p1();
    void thread_tmp_fu_768_p2();
    void thread_tmp_i_2857_fu_483_p2();
    void thread_tmp_i_fu_445_p2();
    void thread_tmp_s_fu_417_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
