// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _ConvolutionInputGene_3_HH_
#define _ConvolutionInputGene_3_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "BlackBoxJam_mux_4pcA.h"
#include "ConvolutionInputGJfO.h"

namespace ap_rtl {

struct ConvolutionInputGene_3 : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > in_V_V_dout;
    sc_in< sc_logic > in_V_V_empty_n;
    sc_out< sc_logic > in_V_V_read;
    sc_out< sc_lv<32> > out_V_V_din;
    sc_in< sc_logic > out_V_V_full_n;
    sc_out< sc_logic > out_V_V_write;
    sc_in< sc_lv<32> > numReps_dout;
    sc_in< sc_logic > numReps_empty_n;
    sc_out< sc_logic > numReps_read;
    sc_out< sc_lv<32> > numReps_out_din;
    sc_in< sc_logic > numReps_out_full_n;
    sc_out< sc_logic > numReps_out_write;


    // Module declarations
    ConvolutionInputGene_3(sc_module_name name);
    SC_HAS_PROCESS(ConvolutionInputGene_3);

    ~ConvolutionInputGene_3();

    sc_trace_file* mVcdFile;

    ConvolutionInputGJfO* inputBuf_0_V_U;
    ConvolutionInputGJfO* inputBuf_1_V_U;
    ConvolutionInputGJfO* inputBuf_2_V_U;
    ConvolutionInputGJfO* inputBuf_3_V_U;
    BlackBoxJam_mux_4pcA<1,1,32,32,32,32,2,32>* BlackBoxJam_mux_4pcA_U339;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > in_V_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > tmp_i_2861_reg_1001;
    sc_signal< sc_lv<1> > or_cond_i_reg_1039;
    sc_signal< sc_logic > out_V_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_lv<1> > tmp_i_2861_reg_1001_pp0_iter4_reg;
    sc_signal< sc_lv<1> > tmp_128_i_reg_1005;
    sc_signal< sc_lv<1> > tmp_128_i_reg_1005_pp0_iter4_reg;
    sc_signal< sc_logic > numReps_blk_n;
    sc_signal< sc_logic > numReps_out_blk_n;
    sc_signal< sc_lv<40> > indvar_flatten_reg_291;
    sc_signal< sc_lv<8> > i_i_reg_302;
    sc_signal< sc_lv<32> > reg_380;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_predicate_op160_read_state5;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter4;
    sc_signal< bool > ap_predicate_op224_write_state8;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter5;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > tmp_i_2861_fu_489_p2;
    sc_signal< sc_lv<1> > or_cond_i_fu_661_p2;
    sc_signal< sc_lv<32> > reg_384;
    sc_signal< sc_lv<32> > numReps_read_reg_971;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<40> > bound_fu_434_p2;
    sc_signal< sc_lv<40> > bound_reg_977;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_440_p2;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_982;
    sc_signal< sc_lv<40> > indvar_flatten_next_fu_445_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > tmp_i_fu_451_p2;
    sc_signal< sc_lv<1> > tmp_i_reg_991;
    sc_signal< sc_lv<8> > i_fu_463_p3;
    sc_signal< sc_lv<1> > tmp_i_2861_reg_1001_pp0_iter2_reg;
    sc_signal< sc_lv<1> > tmp_i_2861_reg_1001_pp0_iter3_reg;
    sc_signal< sc_lv<1> > tmp_128_i_fu_498_p2;
    sc_signal< sc_lv<1> > tmp_128_i_reg_1005_pp0_iter2_reg;
    sc_signal< sc_lv<1> > tmp_128_i_reg_1005_pp0_iter3_reg;
    sc_signal< sc_lv<32> > count_simd_3_load_reg_1009;
    sc_signal< sc_lv<2> > tmp_2992_fu_516_p1;
    sc_signal< sc_lv<2> > tmp_2992_reg_1014;
    sc_signal< sc_lv<29> > tmp_129_i_fu_534_p2;
    sc_signal< sc_lv<29> > tmp_129_i_reg_1019;
    sc_signal< sc_lv<1> > tmp_133_i_fu_546_p2;
    sc_signal< sc_lv<1> > tmp_135_i_fu_563_p2;
    sc_signal< sc_lv<1> > tmp_137_i_fu_574_p2;
    sc_signal< sc_lv<1> > or_cond_i_reg_1039_pp0_iter2_reg;
    sc_signal< sc_lv<1> > tmp_143_i_fu_362_p2;
    sc_signal< sc_lv<1> > tmp_143_i_reg_1043;
    sc_signal< sc_lv<1> > tmp_134_i_fu_368_p2;
    sc_signal< sc_lv<1> > tmp_134_i_reg_1048;
    sc_signal< sc_lv<32> > current_line_in_bloc_fu_769_p2;
    sc_signal< sc_lv<32> > current_line_in_bloc_reg_1052;
    sc_signal< sc_lv<2> > current_block_read_9_fu_780_p2;
    sc_signal< sc_lv<2> > current_block_read_9_reg_1057;
    sc_signal< sc_lv<2> > current_block_read_9_reg_1057_pp0_iter3_reg;
    sc_signal< sc_lv<2> > tmp_2996_fu_793_p1;
    sc_signal< sc_lv<2> > tmp_2996_reg_1062;
    sc_signal< sc_lv<5> > inputBuf_0_V_addr_4_reg_1066;
    sc_signal< sc_lv<5> > inputBuf_1_V_addr_4_reg_1071;
    sc_signal< sc_lv<5> > inputBuf_2_V_addr_4_reg_1076;
    sc_signal< sc_lv<5> > inputBuf_3_V_addr_4_reg_1081;
    sc_signal< sc_lv<2> > tmp_2991_fu_840_p1;
    sc_signal< sc_lv<2> > tmp_2991_reg_1086;
    sc_signal< sc_lv<5> > inputBuf_0_V_addr_reg_1090;
    sc_signal< sc_lv<5> > inputBuf_1_V_addr_reg_1095;
    sc_signal< sc_lv<5> > inputBuf_2_V_addr_reg_1100;
    sc_signal< sc_lv<5> > inputBuf_3_V_addr_reg_1105;
    sc_signal< sc_lv<32> > outElem_V_fu_876_p6;
    sc_signal< sc_lv<32> > outElem_V_reg_1130;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_lv<5> > inputBuf_0_V_address0;
    sc_signal< sc_logic > inputBuf_0_V_ce0;
    sc_signal< sc_lv<32> > inputBuf_0_V_q0;
    sc_signal< sc_lv<5> > inputBuf_0_V_address1;
    sc_signal< sc_logic > inputBuf_0_V_ce1;
    sc_signal< sc_logic > inputBuf_0_V_we1;
    sc_signal< sc_lv<5> > inputBuf_1_V_address0;
    sc_signal< sc_logic > inputBuf_1_V_ce0;
    sc_signal< sc_lv<32> > inputBuf_1_V_q0;
    sc_signal< sc_lv<5> > inputBuf_1_V_address1;
    sc_signal< sc_logic > inputBuf_1_V_ce1;
    sc_signal< sc_logic > inputBuf_1_V_we1;
    sc_signal< sc_lv<5> > inputBuf_2_V_address0;
    sc_signal< sc_logic > inputBuf_2_V_ce0;
    sc_signal< sc_lv<32> > inputBuf_2_V_q0;
    sc_signal< sc_lv<5> > inputBuf_2_V_address1;
    sc_signal< sc_logic > inputBuf_2_V_ce1;
    sc_signal< sc_logic > inputBuf_2_V_we1;
    sc_signal< sc_lv<5> > inputBuf_3_V_address0;
    sc_signal< sc_logic > inputBuf_3_V_ce0;
    sc_signal< sc_lv<32> > inputBuf_3_V_q0;
    sc_signal< sc_lv<5> > inputBuf_3_V_address1;
    sc_signal< sc_logic > inputBuf_3_V_ce1;
    sc_signal< sc_logic > inputBuf_3_V_we1;
    sc_signal< sc_lv<64> > tmp_142_i_fu_785_p1;
    sc_signal< sc_lv<64> > tmp_127_i_fu_832_p1;
    sc_signal< sc_lv<64> > tmp_132_i_fu_869_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<32> > read_block_4_fu_96;
    sc_signal< sc_lv<32> > read_block_1_i_mid2_fu_477_p3;
    sc_signal< sc_lv<32> > read_block_3_cast_i_fu_689_p1;
    sc_signal< sc_lv<32> > read_block_fu_747_p2;
    sc_signal< sc_lv<32> > ofm_y_1_i_fu_100;
    sc_signal< sc_lv<32> > p_ofm_y_5_i_fu_628_p3;
    sc_signal< sc_lv<1> > tmp_138_i_fu_594_p2;
    sc_signal< sc_lv<32> > ofm_x_3_fu_104;
    sc_signal< sc_lv<32> > ofm_x_fu_588_p2;
    sc_signal< sc_lv<32> > k_y_3_fu_108;
    sc_signal< sc_lv<32> > k_y_fu_520_p2;
    sc_signal< sc_lv<32> > inp_3_fu_112;
    sc_signal< sc_lv<32> > p_inp_1_i_fu_620_p3;
    sc_signal< sc_lv<32> > inp_fu_731_p2;
    sc_signal< sc_lv<32> > k_x_3_fu_116;
    sc_signal< sc_lv<32> > k_x_fu_557_p2;
    sc_signal< sc_lv<32> > count_simd_3_fu_120;
    sc_signal< sc_lv<32> > count_simd_fu_540_p2;
    sc_signal< sc_lv<32> > current_block_write_13_fu_124;
    sc_signal< sc_lv<32> > current_block_write_16_fu_820_p3;
    sc_signal< sc_lv<32> > current_block_write_9_2858_fu_856_p3;
    sc_signal< sc_lv<32> > current_line_4_fu_128;
    sc_signal< sc_lv<32> > current_line_3_i_fu_673_p3;
    sc_signal< sc_lv<32> > grp_fu_356_p2;
    sc_signal< sc_lv<32> > counter_internal_blo_fu_132;
    sc_signal< sc_lv<32> > p_i_fu_718_p3;
    sc_signal< sc_lv<39> > tmp_s_fu_412_p3;
    sc_signal< sc_lv<36> > tmp_16_fu_423_p3;
    sc_signal< sc_lv<40> > p_shl_fu_419_p1;
    sc_signal< sc_lv<40> > p_shl2_fu_430_p1;
    sc_signal< sc_lv<8> > i_i_op_fu_457_p2;
    sc_signal< sc_lv<29> > tmp_2995_fu_530_p1;
    sc_signal< sc_lv<29> > tmp_2994_fu_526_p1;
    sc_signal< sc_lv<1> > tmp_139_i_fu_614_p2;
    sc_signal< sc_lv<32> > ofm_y_fu_608_p2;
    sc_signal< sc_lv<1> > tmp_140_i_fu_649_p2;
    sc_signal< sc_lv<1> > tmp_141_i_fu_655_p2;
    sc_signal< sc_lv<2> > tmp_2990_fu_485_p1;
    sc_signal< sc_lv<2> > read_block_4_cast_fu_667_p2;
    sc_signal< sc_lv<2> > read_block_3_fu_681_p3;
    sc_signal< sc_lv<32> > counter_internal_blo_12_fu_706_p2;
    sc_signal< sc_lv<1> > tmp_145_i_fu_712_p2;
    sc_signal< sc_lv<32> > tmp_131_i_fu_762_p3;
    sc_signal< sc_lv<2> > tmp_2993_fu_758_p1;
    sc_signal< sc_lv<2> > tmp_fu_774_p2;
    sc_signal< sc_lv<32> > current_block_write_14_fu_800_p2;
    sc_signal< sc_lv<1> > tmp_144_i_fu_806_p2;
    sc_signal< sc_lv<32> > current_block_write_15_fu_812_p3;
    sc_signal< sc_lv<32> > current_block_write_fu_844_p2;
    sc_signal< sc_lv<1> > tmp_136_i_fu_850_p2;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_458;
    sc_signal< bool > ap_condition_470;
    sc_signal< bool > ap_condition_481;
    sc_signal< bool > ap_condition_492;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<40> ap_const_lv40_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<40> ap_const_lv40_1;
    static const sc_lv<8> ap_const_lv8_90;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<32> ap_const_lv32_48;
    static const sc_lv<32> ap_const_lv32_47;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_4;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage0_iter2();
    void thread_ap_block_state6_pp0_stage0_iter3();
    void thread_ap_block_state7_pp0_stage0_iter4();
    void thread_ap_block_state8_pp0_stage0_iter5();
    void thread_ap_condition_458();
    void thread_ap_condition_470();
    void thread_ap_condition_481();
    void thread_ap_condition_492();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_predicate_op160_read_state5();
    void thread_ap_predicate_op224_write_state8();
    void thread_ap_ready();
    void thread_bound_fu_434_p2();
    void thread_count_simd_fu_540_p2();
    void thread_counter_internal_blo_12_fu_706_p2();
    void thread_current_block_read_9_fu_780_p2();
    void thread_current_block_write_14_fu_800_p2();
    void thread_current_block_write_15_fu_812_p3();
    void thread_current_block_write_16_fu_820_p3();
    void thread_current_block_write_9_2858_fu_856_p3();
    void thread_current_block_write_fu_844_p2();
    void thread_current_line_3_i_fu_673_p3();
    void thread_current_line_in_bloc_fu_769_p2();
    void thread_exitcond_flatten_fu_440_p2();
    void thread_grp_fu_356_p2();
    void thread_i_fu_463_p3();
    void thread_i_i_op_fu_457_p2();
    void thread_in_V_V_blk_n();
    void thread_in_V_V_read();
    void thread_indvar_flatten_next_fu_445_p2();
    void thread_inp_fu_731_p2();
    void thread_inputBuf_0_V_address0();
    void thread_inputBuf_0_V_address1();
    void thread_inputBuf_0_V_ce0();
    void thread_inputBuf_0_V_ce1();
    void thread_inputBuf_0_V_we1();
    void thread_inputBuf_1_V_address0();
    void thread_inputBuf_1_V_address1();
    void thread_inputBuf_1_V_ce0();
    void thread_inputBuf_1_V_ce1();
    void thread_inputBuf_1_V_we1();
    void thread_inputBuf_2_V_address0();
    void thread_inputBuf_2_V_address1();
    void thread_inputBuf_2_V_ce0();
    void thread_inputBuf_2_V_ce1();
    void thread_inputBuf_2_V_we1();
    void thread_inputBuf_3_V_address0();
    void thread_inputBuf_3_V_address1();
    void thread_inputBuf_3_V_ce0();
    void thread_inputBuf_3_V_ce1();
    void thread_inputBuf_3_V_we1();
    void thread_k_x_fu_557_p2();
    void thread_k_y_fu_520_p2();
    void thread_numReps_blk_n();
    void thread_numReps_out_blk_n();
    void thread_numReps_out_din();
    void thread_numReps_out_write();
    void thread_numReps_read();
    void thread_ofm_x_fu_588_p2();
    void thread_ofm_y_fu_608_p2();
    void thread_or_cond_i_fu_661_p2();
    void thread_out_V_V_blk_n();
    void thread_out_V_V_din();
    void thread_out_V_V_write();
    void thread_p_i_fu_718_p3();
    void thread_p_inp_1_i_fu_620_p3();
    void thread_p_ofm_y_5_i_fu_628_p3();
    void thread_p_shl2_fu_430_p1();
    void thread_p_shl_fu_419_p1();
    void thread_read_block_1_i_mid2_fu_477_p3();
    void thread_read_block_3_cast_i_fu_689_p1();
    void thread_read_block_3_fu_681_p3();
    void thread_read_block_4_cast_fu_667_p2();
    void thread_read_block_fu_747_p2();
    void thread_tmp_127_i_fu_832_p1();
    void thread_tmp_128_i_fu_498_p2();
    void thread_tmp_129_i_fu_534_p2();
    void thread_tmp_131_i_fu_762_p3();
    void thread_tmp_132_i_fu_869_p1();
    void thread_tmp_133_i_fu_546_p2();
    void thread_tmp_134_i_fu_368_p2();
    void thread_tmp_135_i_fu_563_p2();
    void thread_tmp_136_i_fu_850_p2();
    void thread_tmp_137_i_fu_574_p2();
    void thread_tmp_138_i_fu_594_p2();
    void thread_tmp_139_i_fu_614_p2();
    void thread_tmp_140_i_fu_649_p2();
    void thread_tmp_141_i_fu_655_p2();
    void thread_tmp_142_i_fu_785_p1();
    void thread_tmp_143_i_fu_362_p2();
    void thread_tmp_144_i_fu_806_p2();
    void thread_tmp_145_i_fu_712_p2();
    void thread_tmp_16_fu_423_p3();
    void thread_tmp_2990_fu_485_p1();
    void thread_tmp_2991_fu_840_p1();
    void thread_tmp_2992_fu_516_p1();
    void thread_tmp_2993_fu_758_p1();
    void thread_tmp_2994_fu_526_p1();
    void thread_tmp_2995_fu_530_p1();
    void thread_tmp_2996_fu_793_p1();
    void thread_tmp_fu_774_p2();
    void thread_tmp_i_2861_fu_489_p2();
    void thread_tmp_i_fu_451_p2();
    void thread_tmp_s_fu_412_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
